Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RAISED_TO_POWER_OF

Grammar

Rule 0     S' -> expr
Rule 1     expr -> stat
Rule 2     expr -> prop
Rule 3     stat -> VARIABLE EQUALS prop SEMICOLON
Rule 4     stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
Rule 5     stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON
Rule 6     prop -> prop PLUS prop
Rule 7     prop -> prop MINUS prop
Rule 8     prop -> prop TIMES prop
Rule 9     prop -> prop DIVIDE prop
Rule 10    prop -> prop INT_DIVIDE prop
Rule 11    prop -> prop MOD prop
Rule 12    prop -> prop IN prop
Rule 13    prop -> MINUS INTEGER
Rule 14    prop -> prop LESS_THAN prop
Rule 15    prop -> prop LESS_THAN_EQUAL_TO prop
Rule 16    prop -> prop EQUAL_TO prop
Rule 17    prop -> prop NOT_EQUAL_TO prop
Rule 18    prop -> prop GREATER_THAN_EQUAL_TO prop
Rule 19    prop -> prop GREATER_THAN prop
Rule 20    prop -> prop CONS prop
Rule 21    prop -> NEGATION prop
Rule 22    prop -> prop CONJUNCTION prop
Rule 23    prop -> prop DISJUNCTION prop
Rule 24    prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
Rule 25    prop -> VARIABLE
Rule 26    prop -> TRUE
Rule 27    prop -> FALSE
Rule 28    prop -> INTEGER
Rule 29    prop -> REAL
Rule 30    prop -> STRING
Rule 31    prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET
Rule 32    prop -> LEFT_BRACKET RIGHT_BRACKET
Rule 33    prop_contents -> prop
Rule 34    prop_contents -> prop COMMA prop_contents
Rule 35    prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
Rule 36    prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
Rule 37    prop_tup_contents -> prop
Rule 38    prop_tup_contents -> prop COMMA prop_tup_contents
Rule 39    prop -> HASHTAG prop prop
Rule 40    prop -> prop LEFT_BRACKET prop RIGHT_BRACKET

Terminals, with rules where they appear

COMMA                : 34 35 36 38
CONJUNCTION          : 22
CONS                 : 20
DISJUNCTION          : 23
DIVIDE               : 9
EQUALS               : 3 4
EQUAL_TO             : 16
FALSE                : 27
GREATER_THAN         : 19
GREATER_THAN_EQUAL_TO : 18
HASHTAG              : 39
IN                   : 12
INTEGER              : 13 28
INT_DIVIDE           : 10
LEFT_BRACKET         : 4 31 32 40
LEFT_PARENTHESIS     : 5 24 35 36
LESS_THAN            : 14
LESS_THAN_EQUAL_TO   : 15
MINUS                : 7 13
MOD                  : 11
NEGATION             : 21
NOT_EQUAL_TO         : 17
PLUS                 : 6
PRINT                : 5
RAISED_TO_POWER_OF   : 
REAL                 : 29
RIGHT_BRACKET        : 4 31 32 40
RIGHT_PARENTHESIS    : 5 24 35 36
SEMICOLON            : 3 5
STRING               : 30
TIMES                : 8
TRUE                 : 26
VARIABLE             : 3 25
error                : 

Nonterminals, with rules where they appear

expr                 : 0
prop                 : 2 3 4 4 4 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 22 22 23 23 24 33 34 35 36 37 38 39 39 40 40
prop_contents        : 31 34
prop_tup_contents    : 35 38
stat                 : 1

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . stat
    (2) expr -> . prop
    (3) stat -> . VARIABLE EQUALS prop SEMICOLON
    (4) stat -> . prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
    (5) stat -> . PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 6
    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    expr                           shift and go to state 1
    stat                           shift and go to state 2
    prop                           shift and go to state 3

state 1

    (0) S' -> expr .



state 2

    (1) expr -> stat .

    $end            reduce using rule 1 (expr -> stat .)


state 3

    (2) expr -> prop .
    (4) stat -> prop . LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    $end            reduce using rule 2 (expr -> prop .)
    LEFT_BRACKET    shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32


state 4

    (3) stat -> VARIABLE . EQUALS prop SEMICOLON
    (25) prop -> VARIABLE .

    EQUALS          shift and go to state 33
    LEFT_BRACKET    reduce using rule 25 (prop -> VARIABLE .)
    PLUS            reduce using rule 25 (prop -> VARIABLE .)
    MINUS           reduce using rule 25 (prop -> VARIABLE .)
    TIMES           reduce using rule 25 (prop -> VARIABLE .)
    DIVIDE          reduce using rule 25 (prop -> VARIABLE .)
    INT_DIVIDE      reduce using rule 25 (prop -> VARIABLE .)
    MOD             reduce using rule 25 (prop -> VARIABLE .)
    IN              reduce using rule 25 (prop -> VARIABLE .)
    LESS_THAN       reduce using rule 25 (prop -> VARIABLE .)
    LESS_THAN_EQUAL_TO reduce using rule 25 (prop -> VARIABLE .)
    EQUAL_TO        reduce using rule 25 (prop -> VARIABLE .)
    NOT_EQUAL_TO    reduce using rule 25 (prop -> VARIABLE .)
    GREATER_THAN_EQUAL_TO reduce using rule 25 (prop -> VARIABLE .)
    GREATER_THAN    reduce using rule 25 (prop -> VARIABLE .)
    CONS            reduce using rule 25 (prop -> VARIABLE .)
    CONJUNCTION     reduce using rule 25 (prop -> VARIABLE .)
    DISJUNCTION     reduce using rule 25 (prop -> VARIABLE .)
    $end            reduce using rule 25 (prop -> VARIABLE .)


state 5

    (31) prop -> LEFT_BRACKET . prop_contents RIGHT_BRACKET
    (32) prop -> LEFT_BRACKET . RIGHT_BRACKET
    (33) prop_contents -> . prop
    (34) prop_contents -> . prop COMMA prop_contents
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 35
    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop_contents                  shift and go to state 34
    prop                           shift and go to state 36

state 6

    (5) stat -> PRINT . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS shift and go to state 38


state 7

    (24) prop -> LEFT_PARENTHESIS . prop RIGHT_PARENTHESIS
    (35) prop -> LEFT_PARENTHESIS . prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> LEFT_PARENTHESIS . prop COMMA RIGHT_PARENTHESIS
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 39

state 8

    (13) prop -> MINUS . INTEGER

    INTEGER         shift and go to state 40


state 9

    (28) prop -> INTEGER .

    LEFT_BRACKET    reduce using rule 28 (prop -> INTEGER .)
    PLUS            reduce using rule 28 (prop -> INTEGER .)
    MINUS           reduce using rule 28 (prop -> INTEGER .)
    TIMES           reduce using rule 28 (prop -> INTEGER .)
    DIVIDE          reduce using rule 28 (prop -> INTEGER .)
    INT_DIVIDE      reduce using rule 28 (prop -> INTEGER .)
    MOD             reduce using rule 28 (prop -> INTEGER .)
    IN              reduce using rule 28 (prop -> INTEGER .)
    LESS_THAN       reduce using rule 28 (prop -> INTEGER .)
    LESS_THAN_EQUAL_TO reduce using rule 28 (prop -> INTEGER .)
    EQUAL_TO        reduce using rule 28 (prop -> INTEGER .)
    NOT_EQUAL_TO    reduce using rule 28 (prop -> INTEGER .)
    GREATER_THAN_EQUAL_TO reduce using rule 28 (prop -> INTEGER .)
    GREATER_THAN    reduce using rule 28 (prop -> INTEGER .)
    CONS            reduce using rule 28 (prop -> INTEGER .)
    CONJUNCTION     reduce using rule 28 (prop -> INTEGER .)
    DISJUNCTION     reduce using rule 28 (prop -> INTEGER .)
    $end            reduce using rule 28 (prop -> INTEGER .)
    COMMA           reduce using rule 28 (prop -> INTEGER .)
    RIGHT_BRACKET   reduce using rule 28 (prop -> INTEGER .)
    RIGHT_PARENTHESIS reduce using rule 28 (prop -> INTEGER .)
    NEGATION        reduce using rule 28 (prop -> INTEGER .)
    LEFT_PARENTHESIS reduce using rule 28 (prop -> INTEGER .)
    VARIABLE        reduce using rule 28 (prop -> INTEGER .)
    TRUE            reduce using rule 28 (prop -> INTEGER .)
    FALSE           reduce using rule 28 (prop -> INTEGER .)
    INTEGER         reduce using rule 28 (prop -> INTEGER .)
    REAL            reduce using rule 28 (prop -> INTEGER .)
    STRING          reduce using rule 28 (prop -> INTEGER .)
    HASHTAG         reduce using rule 28 (prop -> INTEGER .)
    SEMICOLON       reduce using rule 28 (prop -> INTEGER .)


state 10

    (21) prop -> NEGATION . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 41

state 11

    (26) prop -> TRUE .

    LEFT_BRACKET    reduce using rule 26 (prop -> TRUE .)
    PLUS            reduce using rule 26 (prop -> TRUE .)
    MINUS           reduce using rule 26 (prop -> TRUE .)
    TIMES           reduce using rule 26 (prop -> TRUE .)
    DIVIDE          reduce using rule 26 (prop -> TRUE .)
    INT_DIVIDE      reduce using rule 26 (prop -> TRUE .)
    MOD             reduce using rule 26 (prop -> TRUE .)
    IN              reduce using rule 26 (prop -> TRUE .)
    LESS_THAN       reduce using rule 26 (prop -> TRUE .)
    LESS_THAN_EQUAL_TO reduce using rule 26 (prop -> TRUE .)
    EQUAL_TO        reduce using rule 26 (prop -> TRUE .)
    NOT_EQUAL_TO    reduce using rule 26 (prop -> TRUE .)
    GREATER_THAN_EQUAL_TO reduce using rule 26 (prop -> TRUE .)
    GREATER_THAN    reduce using rule 26 (prop -> TRUE .)
    CONS            reduce using rule 26 (prop -> TRUE .)
    CONJUNCTION     reduce using rule 26 (prop -> TRUE .)
    DISJUNCTION     reduce using rule 26 (prop -> TRUE .)
    $end            reduce using rule 26 (prop -> TRUE .)
    COMMA           reduce using rule 26 (prop -> TRUE .)
    RIGHT_BRACKET   reduce using rule 26 (prop -> TRUE .)
    RIGHT_PARENTHESIS reduce using rule 26 (prop -> TRUE .)
    NEGATION        reduce using rule 26 (prop -> TRUE .)
    LEFT_PARENTHESIS reduce using rule 26 (prop -> TRUE .)
    VARIABLE        reduce using rule 26 (prop -> TRUE .)
    TRUE            reduce using rule 26 (prop -> TRUE .)
    FALSE           reduce using rule 26 (prop -> TRUE .)
    INTEGER         reduce using rule 26 (prop -> TRUE .)
    REAL            reduce using rule 26 (prop -> TRUE .)
    STRING          reduce using rule 26 (prop -> TRUE .)
    HASHTAG         reduce using rule 26 (prop -> TRUE .)
    SEMICOLON       reduce using rule 26 (prop -> TRUE .)


state 12

    (27) prop -> FALSE .

    LEFT_BRACKET    reduce using rule 27 (prop -> FALSE .)
    PLUS            reduce using rule 27 (prop -> FALSE .)
    MINUS           reduce using rule 27 (prop -> FALSE .)
    TIMES           reduce using rule 27 (prop -> FALSE .)
    DIVIDE          reduce using rule 27 (prop -> FALSE .)
    INT_DIVIDE      reduce using rule 27 (prop -> FALSE .)
    MOD             reduce using rule 27 (prop -> FALSE .)
    IN              reduce using rule 27 (prop -> FALSE .)
    LESS_THAN       reduce using rule 27 (prop -> FALSE .)
    LESS_THAN_EQUAL_TO reduce using rule 27 (prop -> FALSE .)
    EQUAL_TO        reduce using rule 27 (prop -> FALSE .)
    NOT_EQUAL_TO    reduce using rule 27 (prop -> FALSE .)
    GREATER_THAN_EQUAL_TO reduce using rule 27 (prop -> FALSE .)
    GREATER_THAN    reduce using rule 27 (prop -> FALSE .)
    CONS            reduce using rule 27 (prop -> FALSE .)
    CONJUNCTION     reduce using rule 27 (prop -> FALSE .)
    DISJUNCTION     reduce using rule 27 (prop -> FALSE .)
    $end            reduce using rule 27 (prop -> FALSE .)
    COMMA           reduce using rule 27 (prop -> FALSE .)
    RIGHT_BRACKET   reduce using rule 27 (prop -> FALSE .)
    RIGHT_PARENTHESIS reduce using rule 27 (prop -> FALSE .)
    NEGATION        reduce using rule 27 (prop -> FALSE .)
    LEFT_PARENTHESIS reduce using rule 27 (prop -> FALSE .)
    VARIABLE        reduce using rule 27 (prop -> FALSE .)
    TRUE            reduce using rule 27 (prop -> FALSE .)
    FALSE           reduce using rule 27 (prop -> FALSE .)
    INTEGER         reduce using rule 27 (prop -> FALSE .)
    REAL            reduce using rule 27 (prop -> FALSE .)
    STRING          reduce using rule 27 (prop -> FALSE .)
    HASHTAG         reduce using rule 27 (prop -> FALSE .)
    SEMICOLON       reduce using rule 27 (prop -> FALSE .)


state 13

    (29) prop -> REAL .

    LEFT_BRACKET    reduce using rule 29 (prop -> REAL .)
    PLUS            reduce using rule 29 (prop -> REAL .)
    MINUS           reduce using rule 29 (prop -> REAL .)
    TIMES           reduce using rule 29 (prop -> REAL .)
    DIVIDE          reduce using rule 29 (prop -> REAL .)
    INT_DIVIDE      reduce using rule 29 (prop -> REAL .)
    MOD             reduce using rule 29 (prop -> REAL .)
    IN              reduce using rule 29 (prop -> REAL .)
    LESS_THAN       reduce using rule 29 (prop -> REAL .)
    LESS_THAN_EQUAL_TO reduce using rule 29 (prop -> REAL .)
    EQUAL_TO        reduce using rule 29 (prop -> REAL .)
    NOT_EQUAL_TO    reduce using rule 29 (prop -> REAL .)
    GREATER_THAN_EQUAL_TO reduce using rule 29 (prop -> REAL .)
    GREATER_THAN    reduce using rule 29 (prop -> REAL .)
    CONS            reduce using rule 29 (prop -> REAL .)
    CONJUNCTION     reduce using rule 29 (prop -> REAL .)
    DISJUNCTION     reduce using rule 29 (prop -> REAL .)
    $end            reduce using rule 29 (prop -> REAL .)
    COMMA           reduce using rule 29 (prop -> REAL .)
    RIGHT_BRACKET   reduce using rule 29 (prop -> REAL .)
    RIGHT_PARENTHESIS reduce using rule 29 (prop -> REAL .)
    NEGATION        reduce using rule 29 (prop -> REAL .)
    LEFT_PARENTHESIS reduce using rule 29 (prop -> REAL .)
    VARIABLE        reduce using rule 29 (prop -> REAL .)
    TRUE            reduce using rule 29 (prop -> REAL .)
    FALSE           reduce using rule 29 (prop -> REAL .)
    INTEGER         reduce using rule 29 (prop -> REAL .)
    REAL            reduce using rule 29 (prop -> REAL .)
    STRING          reduce using rule 29 (prop -> REAL .)
    HASHTAG         reduce using rule 29 (prop -> REAL .)
    SEMICOLON       reduce using rule 29 (prop -> REAL .)


state 14

    (30) prop -> STRING .

    LEFT_BRACKET    reduce using rule 30 (prop -> STRING .)
    PLUS            reduce using rule 30 (prop -> STRING .)
    MINUS           reduce using rule 30 (prop -> STRING .)
    TIMES           reduce using rule 30 (prop -> STRING .)
    DIVIDE          reduce using rule 30 (prop -> STRING .)
    INT_DIVIDE      reduce using rule 30 (prop -> STRING .)
    MOD             reduce using rule 30 (prop -> STRING .)
    IN              reduce using rule 30 (prop -> STRING .)
    LESS_THAN       reduce using rule 30 (prop -> STRING .)
    LESS_THAN_EQUAL_TO reduce using rule 30 (prop -> STRING .)
    EQUAL_TO        reduce using rule 30 (prop -> STRING .)
    NOT_EQUAL_TO    reduce using rule 30 (prop -> STRING .)
    GREATER_THAN_EQUAL_TO reduce using rule 30 (prop -> STRING .)
    GREATER_THAN    reduce using rule 30 (prop -> STRING .)
    CONS            reduce using rule 30 (prop -> STRING .)
    CONJUNCTION     reduce using rule 30 (prop -> STRING .)
    DISJUNCTION     reduce using rule 30 (prop -> STRING .)
    $end            reduce using rule 30 (prop -> STRING .)
    COMMA           reduce using rule 30 (prop -> STRING .)
    RIGHT_BRACKET   reduce using rule 30 (prop -> STRING .)
    RIGHT_PARENTHESIS reduce using rule 30 (prop -> STRING .)
    NEGATION        reduce using rule 30 (prop -> STRING .)
    LEFT_PARENTHESIS reduce using rule 30 (prop -> STRING .)
    VARIABLE        reduce using rule 30 (prop -> STRING .)
    TRUE            reduce using rule 30 (prop -> STRING .)
    FALSE           reduce using rule 30 (prop -> STRING .)
    INTEGER         reduce using rule 30 (prop -> STRING .)
    REAL            reduce using rule 30 (prop -> STRING .)
    STRING          reduce using rule 30 (prop -> STRING .)
    HASHTAG         reduce using rule 30 (prop -> STRING .)
    SEMICOLON       reduce using rule 30 (prop -> STRING .)


state 15

    (39) prop -> HASHTAG . prop prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 42

state 16

    (4) stat -> prop LEFT_BRACKET . prop RIGHT_BRACKET EQUALS prop
    (40) prop -> prop LEFT_BRACKET . prop RIGHT_BRACKET
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 43

state 17

    (6) prop -> prop PLUS . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 44

state 18

    (7) prop -> prop MINUS . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 45

state 19

    (8) prop -> prop TIMES . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 46

state 20

    (9) prop -> prop DIVIDE . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 47

state 21

    (10) prop -> prop INT_DIVIDE . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 48

state 22

    (11) prop -> prop MOD . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 49

state 23

    (12) prop -> prop IN . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 50

state 24

    (14) prop -> prop LESS_THAN . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 51

state 25

    (15) prop -> prop LESS_THAN_EQUAL_TO . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 52

state 26

    (16) prop -> prop EQUAL_TO . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 53

state 27

    (17) prop -> prop NOT_EQUAL_TO . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 54

state 28

    (18) prop -> prop GREATER_THAN_EQUAL_TO . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 55

state 29

    (19) prop -> prop GREATER_THAN . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 56

state 30

    (20) prop -> prop CONS . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 57

state 31

    (22) prop -> prop CONJUNCTION . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 58

state 32

    (23) prop -> prop DISJUNCTION . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 59

state 33

    (3) stat -> VARIABLE EQUALS . prop SEMICOLON
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 60

state 34

    (31) prop -> LEFT_BRACKET prop_contents . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 61


state 35

    (32) prop -> LEFT_BRACKET RIGHT_BRACKET .

    LEFT_BRACKET    reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    PLUS            reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    MINUS           reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    TIMES           reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    DIVIDE          reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    INT_DIVIDE      reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    MOD             reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    IN              reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    LESS_THAN_EQUAL_TO reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    EQUAL_TO        reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    NOT_EQUAL_TO    reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    GREATER_THAN_EQUAL_TO reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    CONS            reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    CONJUNCTION     reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    DISJUNCTION     reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    $end            reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    COMMA           reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    NEGATION        reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    VARIABLE        reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    TRUE            reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    FALSE           reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    INTEGER         reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    REAL            reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    STRING          reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    HASHTAG         reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 32 (prop -> LEFT_BRACKET RIGHT_BRACKET .)


state 36

    (33) prop_contents -> prop .
    (34) prop_contents -> prop . COMMA prop_contents
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    RIGHT_BRACKET   reduce using rule 33 (prop_contents -> prop .)
    COMMA           shift and go to state 62
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 63


state 37

    (25) prop -> VARIABLE .

    COMMA           reduce using rule 25 (prop -> VARIABLE .)
    PLUS            reduce using rule 25 (prop -> VARIABLE .)
    MINUS           reduce using rule 25 (prop -> VARIABLE .)
    TIMES           reduce using rule 25 (prop -> VARIABLE .)
    DIVIDE          reduce using rule 25 (prop -> VARIABLE .)
    INT_DIVIDE      reduce using rule 25 (prop -> VARIABLE .)
    MOD             reduce using rule 25 (prop -> VARIABLE .)
    IN              reduce using rule 25 (prop -> VARIABLE .)
    LESS_THAN       reduce using rule 25 (prop -> VARIABLE .)
    LESS_THAN_EQUAL_TO reduce using rule 25 (prop -> VARIABLE .)
    EQUAL_TO        reduce using rule 25 (prop -> VARIABLE .)
    NOT_EQUAL_TO    reduce using rule 25 (prop -> VARIABLE .)
    GREATER_THAN_EQUAL_TO reduce using rule 25 (prop -> VARIABLE .)
    GREATER_THAN    reduce using rule 25 (prop -> VARIABLE .)
    CONS            reduce using rule 25 (prop -> VARIABLE .)
    CONJUNCTION     reduce using rule 25 (prop -> VARIABLE .)
    DISJUNCTION     reduce using rule 25 (prop -> VARIABLE .)
    LEFT_BRACKET    reduce using rule 25 (prop -> VARIABLE .)
    RIGHT_BRACKET   reduce using rule 25 (prop -> VARIABLE .)
    RIGHT_PARENTHESIS reduce using rule 25 (prop -> VARIABLE .)
    $end            reduce using rule 25 (prop -> VARIABLE .)
    NEGATION        reduce using rule 25 (prop -> VARIABLE .)
    LEFT_PARENTHESIS reduce using rule 25 (prop -> VARIABLE .)
    VARIABLE        reduce using rule 25 (prop -> VARIABLE .)
    TRUE            reduce using rule 25 (prop -> VARIABLE .)
    FALSE           reduce using rule 25 (prop -> VARIABLE .)
    INTEGER         reduce using rule 25 (prop -> VARIABLE .)
    REAL            reduce using rule 25 (prop -> VARIABLE .)
    STRING          reduce using rule 25 (prop -> VARIABLE .)
    HASHTAG         reduce using rule 25 (prop -> VARIABLE .)
    SEMICOLON       reduce using rule 25 (prop -> VARIABLE .)


state 38

    (5) stat -> PRINT LEFT_PARENTHESIS . prop RIGHT_PARENTHESIS SEMICOLON
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 64

state 39

    (24) prop -> LEFT_PARENTHESIS prop . RIGHT_PARENTHESIS
    (35) prop -> LEFT_PARENTHESIS prop . COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> LEFT_PARENTHESIS prop . COMMA RIGHT_PARENTHESIS
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    RIGHT_PARENTHESIS shift and go to state 65
    COMMA           shift and go to state 66
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 63


state 40

    (13) prop -> MINUS INTEGER .

    LEFT_BRACKET    reduce using rule 13 (prop -> MINUS INTEGER .)
    PLUS            reduce using rule 13 (prop -> MINUS INTEGER .)
    MINUS           reduce using rule 13 (prop -> MINUS INTEGER .)
    TIMES           reduce using rule 13 (prop -> MINUS INTEGER .)
    DIVIDE          reduce using rule 13 (prop -> MINUS INTEGER .)
    INT_DIVIDE      reduce using rule 13 (prop -> MINUS INTEGER .)
    MOD             reduce using rule 13 (prop -> MINUS INTEGER .)
    IN              reduce using rule 13 (prop -> MINUS INTEGER .)
    LESS_THAN       reduce using rule 13 (prop -> MINUS INTEGER .)
    LESS_THAN_EQUAL_TO reduce using rule 13 (prop -> MINUS INTEGER .)
    EQUAL_TO        reduce using rule 13 (prop -> MINUS INTEGER .)
    NOT_EQUAL_TO    reduce using rule 13 (prop -> MINUS INTEGER .)
    GREATER_THAN_EQUAL_TO reduce using rule 13 (prop -> MINUS INTEGER .)
    GREATER_THAN    reduce using rule 13 (prop -> MINUS INTEGER .)
    CONS            reduce using rule 13 (prop -> MINUS INTEGER .)
    CONJUNCTION     reduce using rule 13 (prop -> MINUS INTEGER .)
    DISJUNCTION     reduce using rule 13 (prop -> MINUS INTEGER .)
    $end            reduce using rule 13 (prop -> MINUS INTEGER .)
    COMMA           reduce using rule 13 (prop -> MINUS INTEGER .)
    RIGHT_BRACKET   reduce using rule 13 (prop -> MINUS INTEGER .)
    RIGHT_PARENTHESIS reduce using rule 13 (prop -> MINUS INTEGER .)
    NEGATION        reduce using rule 13 (prop -> MINUS INTEGER .)
    LEFT_PARENTHESIS reduce using rule 13 (prop -> MINUS INTEGER .)
    VARIABLE        reduce using rule 13 (prop -> MINUS INTEGER .)
    TRUE            reduce using rule 13 (prop -> MINUS INTEGER .)
    FALSE           reduce using rule 13 (prop -> MINUS INTEGER .)
    INTEGER         reduce using rule 13 (prop -> MINUS INTEGER .)
    REAL            reduce using rule 13 (prop -> MINUS INTEGER .)
    STRING          reduce using rule 13 (prop -> MINUS INTEGER .)
    HASHTAG         reduce using rule 13 (prop -> MINUS INTEGER .)
    SEMICOLON       reduce using rule 13 (prop -> MINUS INTEGER .)


state 41

    (21) prop -> NEGATION prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 21 (prop -> NEGATION prop .)
    CONJUNCTION     reduce using rule 21 (prop -> NEGATION prop .)
    DISJUNCTION     reduce using rule 21 (prop -> NEGATION prop .)
    $end            reduce using rule 21 (prop -> NEGATION prop .)
    COMMA           reduce using rule 21 (prop -> NEGATION prop .)
    RIGHT_BRACKET   reduce using rule 21 (prop -> NEGATION prop .)
    RIGHT_PARENTHESIS reduce using rule 21 (prop -> NEGATION prop .)
    NEGATION        reduce using rule 21 (prop -> NEGATION prop .)
    LEFT_PARENTHESIS reduce using rule 21 (prop -> NEGATION prop .)
    VARIABLE        reduce using rule 21 (prop -> NEGATION prop .)
    TRUE            reduce using rule 21 (prop -> NEGATION prop .)
    FALSE           reduce using rule 21 (prop -> NEGATION prop .)
    INTEGER         reduce using rule 21 (prop -> NEGATION prop .)
    REAL            reduce using rule 21 (prop -> NEGATION prop .)
    STRING          reduce using rule 21 (prop -> NEGATION prop .)
    HASHTAG         reduce using rule 21 (prop -> NEGATION prop .)
    SEMICOLON       reduce using rule 21 (prop -> NEGATION prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30

  ! PLUS            [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! MINUS           [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! TIMES           [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! DIVIDE          [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! INT_DIVIDE      [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! MOD             [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! IN              [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! LESS_THAN       [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! LESS_THAN_EQUAL_TO [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! EQUAL_TO        [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! NOT_EQUAL_TO    [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! GREATER_THAN_EQUAL_TO [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! GREATER_THAN    [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! CONS            [ reduce using rule 21 (prop -> NEGATION prop .) ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 42

    (39) prop -> HASHTAG prop . prop
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    PLUS            shift and go to state 17
    MINUS           shift and go to state 68
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 69
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 67

state 43

    (4) stat -> prop LEFT_BRACKET prop . RIGHT_BRACKET EQUALS prop
    (40) prop -> prop LEFT_BRACKET prop . RIGHT_BRACKET
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 70
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 63


state 44

    (6) prop -> prop PLUS prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 6 (prop -> prop PLUS prop .)
    PLUS            reduce using rule 6 (prop -> prop PLUS prop .)
    MINUS           reduce using rule 6 (prop -> prop PLUS prop .)
    IN              reduce using rule 6 (prop -> prop PLUS prop .)
    LESS_THAN       reduce using rule 6 (prop -> prop PLUS prop .)
    LESS_THAN_EQUAL_TO reduce using rule 6 (prop -> prop PLUS prop .)
    EQUAL_TO        reduce using rule 6 (prop -> prop PLUS prop .)
    NOT_EQUAL_TO    reduce using rule 6 (prop -> prop PLUS prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 6 (prop -> prop PLUS prop .)
    GREATER_THAN    reduce using rule 6 (prop -> prop PLUS prop .)
    CONS            reduce using rule 6 (prop -> prop PLUS prop .)
    CONJUNCTION     reduce using rule 6 (prop -> prop PLUS prop .)
    DISJUNCTION     reduce using rule 6 (prop -> prop PLUS prop .)
    $end            reduce using rule 6 (prop -> prop PLUS prop .)
    COMMA           reduce using rule 6 (prop -> prop PLUS prop .)
    RIGHT_BRACKET   reduce using rule 6 (prop -> prop PLUS prop .)
    RIGHT_PARENTHESIS reduce using rule 6 (prop -> prop PLUS prop .)
    NEGATION        reduce using rule 6 (prop -> prop PLUS prop .)
    LEFT_PARENTHESIS reduce using rule 6 (prop -> prop PLUS prop .)
    VARIABLE        reduce using rule 6 (prop -> prop PLUS prop .)
    TRUE            reduce using rule 6 (prop -> prop PLUS prop .)
    FALSE           reduce using rule 6 (prop -> prop PLUS prop .)
    INTEGER         reduce using rule 6 (prop -> prop PLUS prop .)
    REAL            reduce using rule 6 (prop -> prop PLUS prop .)
    STRING          reduce using rule 6 (prop -> prop PLUS prop .)
    HASHTAG         reduce using rule 6 (prop -> prop PLUS prop .)
    SEMICOLON       reduce using rule 6 (prop -> prop PLUS prop .)
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22

  ! TIMES           [ reduce using rule 6 (prop -> prop PLUS prop .) ]
  ! DIVIDE          [ reduce using rule 6 (prop -> prop PLUS prop .) ]
  ! INT_DIVIDE      [ reduce using rule 6 (prop -> prop PLUS prop .) ]
  ! MOD             [ reduce using rule 6 (prop -> prop PLUS prop .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! IN              [ shift and go to state 23 ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONS            [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 45

    (7) prop -> prop MINUS prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 7 (prop -> prop MINUS prop .)
    PLUS            reduce using rule 7 (prop -> prop MINUS prop .)
    MINUS           reduce using rule 7 (prop -> prop MINUS prop .)
    IN              reduce using rule 7 (prop -> prop MINUS prop .)
    LESS_THAN       reduce using rule 7 (prop -> prop MINUS prop .)
    LESS_THAN_EQUAL_TO reduce using rule 7 (prop -> prop MINUS prop .)
    EQUAL_TO        reduce using rule 7 (prop -> prop MINUS prop .)
    NOT_EQUAL_TO    reduce using rule 7 (prop -> prop MINUS prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 7 (prop -> prop MINUS prop .)
    GREATER_THAN    reduce using rule 7 (prop -> prop MINUS prop .)
    CONS            reduce using rule 7 (prop -> prop MINUS prop .)
    CONJUNCTION     reduce using rule 7 (prop -> prop MINUS prop .)
    DISJUNCTION     reduce using rule 7 (prop -> prop MINUS prop .)
    $end            reduce using rule 7 (prop -> prop MINUS prop .)
    COMMA           reduce using rule 7 (prop -> prop MINUS prop .)
    RIGHT_BRACKET   reduce using rule 7 (prop -> prop MINUS prop .)
    RIGHT_PARENTHESIS reduce using rule 7 (prop -> prop MINUS prop .)
    NEGATION        reduce using rule 7 (prop -> prop MINUS prop .)
    LEFT_PARENTHESIS reduce using rule 7 (prop -> prop MINUS prop .)
    VARIABLE        reduce using rule 7 (prop -> prop MINUS prop .)
    TRUE            reduce using rule 7 (prop -> prop MINUS prop .)
    FALSE           reduce using rule 7 (prop -> prop MINUS prop .)
    INTEGER         reduce using rule 7 (prop -> prop MINUS prop .)
    REAL            reduce using rule 7 (prop -> prop MINUS prop .)
    STRING          reduce using rule 7 (prop -> prop MINUS prop .)
    HASHTAG         reduce using rule 7 (prop -> prop MINUS prop .)
    SEMICOLON       reduce using rule 7 (prop -> prop MINUS prop .)
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22

  ! TIMES           [ reduce using rule 7 (prop -> prop MINUS prop .) ]
  ! DIVIDE          [ reduce using rule 7 (prop -> prop MINUS prop .) ]
  ! INT_DIVIDE      [ reduce using rule 7 (prop -> prop MINUS prop .) ]
  ! MOD             [ reduce using rule 7 (prop -> prop MINUS prop .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! IN              [ shift and go to state 23 ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONS            [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 46

    (8) prop -> prop TIMES prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 8 (prop -> prop TIMES prop .)
    PLUS            reduce using rule 8 (prop -> prop TIMES prop .)
    MINUS           reduce using rule 8 (prop -> prop TIMES prop .)
    TIMES           reduce using rule 8 (prop -> prop TIMES prop .)
    DIVIDE          reduce using rule 8 (prop -> prop TIMES prop .)
    INT_DIVIDE      reduce using rule 8 (prop -> prop TIMES prop .)
    MOD             reduce using rule 8 (prop -> prop TIMES prop .)
    IN              reduce using rule 8 (prop -> prop TIMES prop .)
    LESS_THAN       reduce using rule 8 (prop -> prop TIMES prop .)
    LESS_THAN_EQUAL_TO reduce using rule 8 (prop -> prop TIMES prop .)
    EQUAL_TO        reduce using rule 8 (prop -> prop TIMES prop .)
    NOT_EQUAL_TO    reduce using rule 8 (prop -> prop TIMES prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 8 (prop -> prop TIMES prop .)
    GREATER_THAN    reduce using rule 8 (prop -> prop TIMES prop .)
    CONS            reduce using rule 8 (prop -> prop TIMES prop .)
    CONJUNCTION     reduce using rule 8 (prop -> prop TIMES prop .)
    DISJUNCTION     reduce using rule 8 (prop -> prop TIMES prop .)
    $end            reduce using rule 8 (prop -> prop TIMES prop .)
    COMMA           reduce using rule 8 (prop -> prop TIMES prop .)
    RIGHT_BRACKET   reduce using rule 8 (prop -> prop TIMES prop .)
    RIGHT_PARENTHESIS reduce using rule 8 (prop -> prop TIMES prop .)
    NEGATION        reduce using rule 8 (prop -> prop TIMES prop .)
    LEFT_PARENTHESIS reduce using rule 8 (prop -> prop TIMES prop .)
    VARIABLE        reduce using rule 8 (prop -> prop TIMES prop .)
    TRUE            reduce using rule 8 (prop -> prop TIMES prop .)
    FALSE           reduce using rule 8 (prop -> prop TIMES prop .)
    INTEGER         reduce using rule 8 (prop -> prop TIMES prop .)
    REAL            reduce using rule 8 (prop -> prop TIMES prop .)
    STRING          reduce using rule 8 (prop -> prop TIMES prop .)
    HASHTAG         reduce using rule 8 (prop -> prop TIMES prop .)
    SEMICOLON       reduce using rule 8 (prop -> prop TIMES prop .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]
  ! INT_DIVIDE      [ shift and go to state 21 ]
  ! MOD             [ shift and go to state 22 ]
  ! IN              [ shift and go to state 23 ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONS            [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 47

    (9) prop -> prop DIVIDE prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 9 (prop -> prop DIVIDE prop .)
    PLUS            reduce using rule 9 (prop -> prop DIVIDE prop .)
    MINUS           reduce using rule 9 (prop -> prop DIVIDE prop .)
    TIMES           reduce using rule 9 (prop -> prop DIVIDE prop .)
    DIVIDE          reduce using rule 9 (prop -> prop DIVIDE prop .)
    INT_DIVIDE      reduce using rule 9 (prop -> prop DIVIDE prop .)
    MOD             reduce using rule 9 (prop -> prop DIVIDE prop .)
    IN              reduce using rule 9 (prop -> prop DIVIDE prop .)
    LESS_THAN       reduce using rule 9 (prop -> prop DIVIDE prop .)
    LESS_THAN_EQUAL_TO reduce using rule 9 (prop -> prop DIVIDE prop .)
    EQUAL_TO        reduce using rule 9 (prop -> prop DIVIDE prop .)
    NOT_EQUAL_TO    reduce using rule 9 (prop -> prop DIVIDE prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 9 (prop -> prop DIVIDE prop .)
    GREATER_THAN    reduce using rule 9 (prop -> prop DIVIDE prop .)
    CONS            reduce using rule 9 (prop -> prop DIVIDE prop .)
    CONJUNCTION     reduce using rule 9 (prop -> prop DIVIDE prop .)
    DISJUNCTION     reduce using rule 9 (prop -> prop DIVIDE prop .)
    $end            reduce using rule 9 (prop -> prop DIVIDE prop .)
    COMMA           reduce using rule 9 (prop -> prop DIVIDE prop .)
    RIGHT_BRACKET   reduce using rule 9 (prop -> prop DIVIDE prop .)
    RIGHT_PARENTHESIS reduce using rule 9 (prop -> prop DIVIDE prop .)
    NEGATION        reduce using rule 9 (prop -> prop DIVIDE prop .)
    LEFT_PARENTHESIS reduce using rule 9 (prop -> prop DIVIDE prop .)
    VARIABLE        reduce using rule 9 (prop -> prop DIVIDE prop .)
    TRUE            reduce using rule 9 (prop -> prop DIVIDE prop .)
    FALSE           reduce using rule 9 (prop -> prop DIVIDE prop .)
    INTEGER         reduce using rule 9 (prop -> prop DIVIDE prop .)
    REAL            reduce using rule 9 (prop -> prop DIVIDE prop .)
    STRING          reduce using rule 9 (prop -> prop DIVIDE prop .)
    HASHTAG         reduce using rule 9 (prop -> prop DIVIDE prop .)
    SEMICOLON       reduce using rule 9 (prop -> prop DIVIDE prop .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]
  ! INT_DIVIDE      [ shift and go to state 21 ]
  ! MOD             [ shift and go to state 22 ]
  ! IN              [ shift and go to state 23 ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONS            [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 48

    (10) prop -> prop INT_DIVIDE prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    PLUS            reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    MINUS           reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    TIMES           reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    DIVIDE          reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    INT_DIVIDE      reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    MOD             reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    IN              reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    LESS_THAN       reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    LESS_THAN_EQUAL_TO reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    EQUAL_TO        reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    NOT_EQUAL_TO    reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    GREATER_THAN    reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    CONS            reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    CONJUNCTION     reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    DISJUNCTION     reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    $end            reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    COMMA           reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    RIGHT_BRACKET   reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    RIGHT_PARENTHESIS reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    NEGATION        reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    LEFT_PARENTHESIS reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    VARIABLE        reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    TRUE            reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    FALSE           reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    INTEGER         reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    REAL            reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    STRING          reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    HASHTAG         reduce using rule 10 (prop -> prop INT_DIVIDE prop .)
    SEMICOLON       reduce using rule 10 (prop -> prop INT_DIVIDE prop .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]
  ! INT_DIVIDE      [ shift and go to state 21 ]
  ! MOD             [ shift and go to state 22 ]
  ! IN              [ shift and go to state 23 ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONS            [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 49

    (11) prop -> prop MOD prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 11 (prop -> prop MOD prop .)
    PLUS            reduce using rule 11 (prop -> prop MOD prop .)
    MINUS           reduce using rule 11 (prop -> prop MOD prop .)
    TIMES           reduce using rule 11 (prop -> prop MOD prop .)
    DIVIDE          reduce using rule 11 (prop -> prop MOD prop .)
    INT_DIVIDE      reduce using rule 11 (prop -> prop MOD prop .)
    MOD             reduce using rule 11 (prop -> prop MOD prop .)
    IN              reduce using rule 11 (prop -> prop MOD prop .)
    LESS_THAN       reduce using rule 11 (prop -> prop MOD prop .)
    LESS_THAN_EQUAL_TO reduce using rule 11 (prop -> prop MOD prop .)
    EQUAL_TO        reduce using rule 11 (prop -> prop MOD prop .)
    NOT_EQUAL_TO    reduce using rule 11 (prop -> prop MOD prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 11 (prop -> prop MOD prop .)
    GREATER_THAN    reduce using rule 11 (prop -> prop MOD prop .)
    CONS            reduce using rule 11 (prop -> prop MOD prop .)
    CONJUNCTION     reduce using rule 11 (prop -> prop MOD prop .)
    DISJUNCTION     reduce using rule 11 (prop -> prop MOD prop .)
    $end            reduce using rule 11 (prop -> prop MOD prop .)
    COMMA           reduce using rule 11 (prop -> prop MOD prop .)
    RIGHT_BRACKET   reduce using rule 11 (prop -> prop MOD prop .)
    RIGHT_PARENTHESIS reduce using rule 11 (prop -> prop MOD prop .)
    NEGATION        reduce using rule 11 (prop -> prop MOD prop .)
    LEFT_PARENTHESIS reduce using rule 11 (prop -> prop MOD prop .)
    VARIABLE        reduce using rule 11 (prop -> prop MOD prop .)
    TRUE            reduce using rule 11 (prop -> prop MOD prop .)
    FALSE           reduce using rule 11 (prop -> prop MOD prop .)
    INTEGER         reduce using rule 11 (prop -> prop MOD prop .)
    REAL            reduce using rule 11 (prop -> prop MOD prop .)
    STRING          reduce using rule 11 (prop -> prop MOD prop .)
    HASHTAG         reduce using rule 11 (prop -> prop MOD prop .)
    SEMICOLON       reduce using rule 11 (prop -> prop MOD prop .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]
  ! INT_DIVIDE      [ shift and go to state 21 ]
  ! MOD             [ shift and go to state 22 ]
  ! IN              [ shift and go to state 23 ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONS            [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 50

    (12) prop -> prop IN prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 12 (prop -> prop IN prop .)
    IN              reduce using rule 12 (prop -> prop IN prop .)
    LESS_THAN       reduce using rule 12 (prop -> prop IN prop .)
    LESS_THAN_EQUAL_TO reduce using rule 12 (prop -> prop IN prop .)
    EQUAL_TO        reduce using rule 12 (prop -> prop IN prop .)
    NOT_EQUAL_TO    reduce using rule 12 (prop -> prop IN prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 12 (prop -> prop IN prop .)
    GREATER_THAN    reduce using rule 12 (prop -> prop IN prop .)
    CONS            reduce using rule 12 (prop -> prop IN prop .)
    CONJUNCTION     reduce using rule 12 (prop -> prop IN prop .)
    DISJUNCTION     reduce using rule 12 (prop -> prop IN prop .)
    $end            reduce using rule 12 (prop -> prop IN prop .)
    COMMA           reduce using rule 12 (prop -> prop IN prop .)
    RIGHT_BRACKET   reduce using rule 12 (prop -> prop IN prop .)
    RIGHT_PARENTHESIS reduce using rule 12 (prop -> prop IN prop .)
    NEGATION        reduce using rule 12 (prop -> prop IN prop .)
    LEFT_PARENTHESIS reduce using rule 12 (prop -> prop IN prop .)
    VARIABLE        reduce using rule 12 (prop -> prop IN prop .)
    TRUE            reduce using rule 12 (prop -> prop IN prop .)
    FALSE           reduce using rule 12 (prop -> prop IN prop .)
    INTEGER         reduce using rule 12 (prop -> prop IN prop .)
    REAL            reduce using rule 12 (prop -> prop IN prop .)
    STRING          reduce using rule 12 (prop -> prop IN prop .)
    HASHTAG         reduce using rule 12 (prop -> prop IN prop .)
    SEMICOLON       reduce using rule 12 (prop -> prop IN prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22

  ! PLUS            [ reduce using rule 12 (prop -> prop IN prop .) ]
  ! MINUS           [ reduce using rule 12 (prop -> prop IN prop .) ]
  ! TIMES           [ reduce using rule 12 (prop -> prop IN prop .) ]
  ! DIVIDE          [ reduce using rule 12 (prop -> prop IN prop .) ]
  ! INT_DIVIDE      [ reduce using rule 12 (prop -> prop IN prop .) ]
  ! MOD             [ reduce using rule 12 (prop -> prop IN prop .) ]
  ! IN              [ shift and go to state 23 ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONS            [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 51

    (14) prop -> prop LESS_THAN prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 14 (prop -> prop LESS_THAN prop .)
    LESS_THAN       reduce using rule 14 (prop -> prop LESS_THAN prop .)
    LESS_THAN_EQUAL_TO reduce using rule 14 (prop -> prop LESS_THAN prop .)
    EQUAL_TO        reduce using rule 14 (prop -> prop LESS_THAN prop .)
    NOT_EQUAL_TO    reduce using rule 14 (prop -> prop LESS_THAN prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 14 (prop -> prop LESS_THAN prop .)
    GREATER_THAN    reduce using rule 14 (prop -> prop LESS_THAN prop .)
    CONJUNCTION     reduce using rule 14 (prop -> prop LESS_THAN prop .)
    DISJUNCTION     reduce using rule 14 (prop -> prop LESS_THAN prop .)
    $end            reduce using rule 14 (prop -> prop LESS_THAN prop .)
    COMMA           reduce using rule 14 (prop -> prop LESS_THAN prop .)
    RIGHT_BRACKET   reduce using rule 14 (prop -> prop LESS_THAN prop .)
    RIGHT_PARENTHESIS reduce using rule 14 (prop -> prop LESS_THAN prop .)
    NEGATION        reduce using rule 14 (prop -> prop LESS_THAN prop .)
    LEFT_PARENTHESIS reduce using rule 14 (prop -> prop LESS_THAN prop .)
    VARIABLE        reduce using rule 14 (prop -> prop LESS_THAN prop .)
    TRUE            reduce using rule 14 (prop -> prop LESS_THAN prop .)
    FALSE           reduce using rule 14 (prop -> prop LESS_THAN prop .)
    INTEGER         reduce using rule 14 (prop -> prop LESS_THAN prop .)
    REAL            reduce using rule 14 (prop -> prop LESS_THAN prop .)
    STRING          reduce using rule 14 (prop -> prop LESS_THAN prop .)
    HASHTAG         reduce using rule 14 (prop -> prop LESS_THAN prop .)
    SEMICOLON       reduce using rule 14 (prop -> prop LESS_THAN prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    CONS            shift and go to state 30

  ! PLUS            [ reduce using rule 14 (prop -> prop LESS_THAN prop .) ]
  ! MINUS           [ reduce using rule 14 (prop -> prop LESS_THAN prop .) ]
  ! TIMES           [ reduce using rule 14 (prop -> prop LESS_THAN prop .) ]
  ! DIVIDE          [ reduce using rule 14 (prop -> prop LESS_THAN prop .) ]
  ! INT_DIVIDE      [ reduce using rule 14 (prop -> prop LESS_THAN prop .) ]
  ! MOD             [ reduce using rule 14 (prop -> prop LESS_THAN prop .) ]
  ! IN              [ reduce using rule 14 (prop -> prop LESS_THAN prop .) ]
  ! CONS            [ reduce using rule 14 (prop -> prop LESS_THAN prop .) ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 52

    (15) prop -> prop LESS_THAN_EQUAL_TO prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    LESS_THAN       reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    LESS_THAN_EQUAL_TO reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    EQUAL_TO        reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    NOT_EQUAL_TO    reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    GREATER_THAN    reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    CONJUNCTION     reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    DISJUNCTION     reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    $end            reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    COMMA           reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    RIGHT_BRACKET   reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    RIGHT_PARENTHESIS reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    NEGATION        reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    LEFT_PARENTHESIS reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    VARIABLE        reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    TRUE            reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    FALSE           reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    INTEGER         reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    REAL            reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    STRING          reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    HASHTAG         reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    SEMICOLON       reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    CONS            shift and go to state 30

  ! PLUS            [ reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! MINUS           [ reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! TIMES           [ reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! DIVIDE          [ reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! INT_DIVIDE      [ reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! MOD             [ reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! IN              [ reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! CONS            [ reduce using rule 15 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 53

    (16) prop -> prop EQUAL_TO prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    LESS_THAN       reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    LESS_THAN_EQUAL_TO reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    EQUAL_TO        reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    NOT_EQUAL_TO    reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    GREATER_THAN    reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    CONJUNCTION     reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    DISJUNCTION     reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    $end            reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    COMMA           reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    RIGHT_BRACKET   reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    RIGHT_PARENTHESIS reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    NEGATION        reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    LEFT_PARENTHESIS reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    VARIABLE        reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    TRUE            reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    FALSE           reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    INTEGER         reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    REAL            reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    STRING          reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    HASHTAG         reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    SEMICOLON       reduce using rule 16 (prop -> prop EQUAL_TO prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    CONS            shift and go to state 30

  ! PLUS            [ reduce using rule 16 (prop -> prop EQUAL_TO prop .) ]
  ! MINUS           [ reduce using rule 16 (prop -> prop EQUAL_TO prop .) ]
  ! TIMES           [ reduce using rule 16 (prop -> prop EQUAL_TO prop .) ]
  ! DIVIDE          [ reduce using rule 16 (prop -> prop EQUAL_TO prop .) ]
  ! INT_DIVIDE      [ reduce using rule 16 (prop -> prop EQUAL_TO prop .) ]
  ! MOD             [ reduce using rule 16 (prop -> prop EQUAL_TO prop .) ]
  ! IN              [ reduce using rule 16 (prop -> prop EQUAL_TO prop .) ]
  ! CONS            [ reduce using rule 16 (prop -> prop EQUAL_TO prop .) ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 54

    (17) prop -> prop NOT_EQUAL_TO prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    LESS_THAN       reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    LESS_THAN_EQUAL_TO reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    EQUAL_TO        reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    NOT_EQUAL_TO    reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    GREATER_THAN    reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    CONJUNCTION     reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    DISJUNCTION     reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    $end            reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    COMMA           reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    RIGHT_BRACKET   reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    RIGHT_PARENTHESIS reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    NEGATION        reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    LEFT_PARENTHESIS reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    VARIABLE        reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    TRUE            reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    FALSE           reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    INTEGER         reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    REAL            reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    STRING          reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    HASHTAG         reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    SEMICOLON       reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    CONS            shift and go to state 30

  ! PLUS            [ reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! MINUS           [ reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! TIMES           [ reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! DIVIDE          [ reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! INT_DIVIDE      [ reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! MOD             [ reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! IN              [ reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! CONS            [ reduce using rule 17 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 55

    (18) prop -> prop GREATER_THAN_EQUAL_TO prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    LESS_THAN       reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    LESS_THAN_EQUAL_TO reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    EQUAL_TO        reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    NOT_EQUAL_TO    reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    GREATER_THAN    reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    CONJUNCTION     reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    DISJUNCTION     reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    $end            reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    COMMA           reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    RIGHT_BRACKET   reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    RIGHT_PARENTHESIS reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    NEGATION        reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    LEFT_PARENTHESIS reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    VARIABLE        reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    TRUE            reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    FALSE           reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    INTEGER         reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    REAL            reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    STRING          reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    HASHTAG         reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    SEMICOLON       reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    CONS            shift and go to state 30

  ! PLUS            [ reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! MINUS           [ reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! TIMES           [ reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! DIVIDE          [ reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! INT_DIVIDE      [ reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! MOD             [ reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! IN              [ reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! CONS            [ reduce using rule 18 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 56

    (19) prop -> prop GREATER_THAN prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    LESS_THAN       reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    LESS_THAN_EQUAL_TO reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    EQUAL_TO        reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    NOT_EQUAL_TO    reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    GREATER_THAN    reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    CONJUNCTION     reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    DISJUNCTION     reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    $end            reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    COMMA           reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    RIGHT_BRACKET   reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    RIGHT_PARENTHESIS reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    NEGATION        reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    LEFT_PARENTHESIS reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    VARIABLE        reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    TRUE            reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    FALSE           reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    INTEGER         reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    REAL            reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    STRING          reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    HASHTAG         reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    SEMICOLON       reduce using rule 19 (prop -> prop GREATER_THAN prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    CONS            shift and go to state 30

  ! PLUS            [ reduce using rule 19 (prop -> prop GREATER_THAN prop .) ]
  ! MINUS           [ reduce using rule 19 (prop -> prop GREATER_THAN prop .) ]
  ! TIMES           [ reduce using rule 19 (prop -> prop GREATER_THAN prop .) ]
  ! DIVIDE          [ reduce using rule 19 (prop -> prop GREATER_THAN prop .) ]
  ! INT_DIVIDE      [ reduce using rule 19 (prop -> prop GREATER_THAN prop .) ]
  ! MOD             [ reduce using rule 19 (prop -> prop GREATER_THAN prop .) ]
  ! IN              [ reduce using rule 19 (prop -> prop GREATER_THAN prop .) ]
  ! CONS            [ reduce using rule 19 (prop -> prop GREATER_THAN prop .) ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 57

    (20) prop -> prop CONS prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 20 (prop -> prop CONS prop .)
    LESS_THAN       reduce using rule 20 (prop -> prop CONS prop .)
    LESS_THAN_EQUAL_TO reduce using rule 20 (prop -> prop CONS prop .)
    EQUAL_TO        reduce using rule 20 (prop -> prop CONS prop .)
    NOT_EQUAL_TO    reduce using rule 20 (prop -> prop CONS prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 20 (prop -> prop CONS prop .)
    GREATER_THAN    reduce using rule 20 (prop -> prop CONS prop .)
    CONJUNCTION     reduce using rule 20 (prop -> prop CONS prop .)
    DISJUNCTION     reduce using rule 20 (prop -> prop CONS prop .)
    $end            reduce using rule 20 (prop -> prop CONS prop .)
    COMMA           reduce using rule 20 (prop -> prop CONS prop .)
    RIGHT_BRACKET   reduce using rule 20 (prop -> prop CONS prop .)
    RIGHT_PARENTHESIS reduce using rule 20 (prop -> prop CONS prop .)
    NEGATION        reduce using rule 20 (prop -> prop CONS prop .)
    LEFT_PARENTHESIS reduce using rule 20 (prop -> prop CONS prop .)
    VARIABLE        reduce using rule 20 (prop -> prop CONS prop .)
    TRUE            reduce using rule 20 (prop -> prop CONS prop .)
    FALSE           reduce using rule 20 (prop -> prop CONS prop .)
    INTEGER         reduce using rule 20 (prop -> prop CONS prop .)
    REAL            reduce using rule 20 (prop -> prop CONS prop .)
    STRING          reduce using rule 20 (prop -> prop CONS prop .)
    HASHTAG         reduce using rule 20 (prop -> prop CONS prop .)
    SEMICOLON       reduce using rule 20 (prop -> prop CONS prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    CONS            shift and go to state 30

  ! PLUS            [ reduce using rule 20 (prop -> prop CONS prop .) ]
  ! MINUS           [ reduce using rule 20 (prop -> prop CONS prop .) ]
  ! TIMES           [ reduce using rule 20 (prop -> prop CONS prop .) ]
  ! DIVIDE          [ reduce using rule 20 (prop -> prop CONS prop .) ]
  ! INT_DIVIDE      [ reduce using rule 20 (prop -> prop CONS prop .) ]
  ! MOD             [ reduce using rule 20 (prop -> prop CONS prop .) ]
  ! IN              [ reduce using rule 20 (prop -> prop CONS prop .) ]
  ! CONS            [ reduce using rule 20 (prop -> prop CONS prop .) ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 58

    (22) prop -> prop CONJUNCTION prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    CONJUNCTION     reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    DISJUNCTION     reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    $end            reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    COMMA           reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    RIGHT_BRACKET   reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    RIGHT_PARENTHESIS reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    NEGATION        reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    LEFT_PARENTHESIS reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    VARIABLE        reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    TRUE            reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    FALSE           reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    INTEGER         reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    REAL            reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    STRING          reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    HASHTAG         reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    SEMICOLON       reduce using rule 22 (prop -> prop CONJUNCTION prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30

  ! PLUS            [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! MINUS           [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! TIMES           [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! DIVIDE          [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! INT_DIVIDE      [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! MOD             [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! IN              [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! LESS_THAN       [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! LESS_THAN_EQUAL_TO [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! EQUAL_TO        [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! NOT_EQUAL_TO    [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! GREATER_THAN_EQUAL_TO [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! GREATER_THAN    [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! CONS            [ reduce using rule 22 (prop -> prop CONJUNCTION prop .) ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 59

    (23) prop -> prop DISJUNCTION prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    DISJUNCTION     reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    $end            reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    COMMA           reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    RIGHT_BRACKET   reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    RIGHT_PARENTHESIS reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    NEGATION        reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    LEFT_PARENTHESIS reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    VARIABLE        reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    TRUE            reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    FALSE           reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    INTEGER         reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    REAL            reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    STRING          reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    HASHTAG         reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    SEMICOLON       reduce using rule 23 (prop -> prop DISJUNCTION prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31

  ! PLUS            [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! MINUS           [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! TIMES           [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! DIVIDE          [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! INT_DIVIDE      [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! MOD             [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! IN              [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! LESS_THAN       [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! LESS_THAN_EQUAL_TO [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! EQUAL_TO        [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! NOT_EQUAL_TO    [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! GREATER_THAN_EQUAL_TO [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! GREATER_THAN    [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! CONS            [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! CONJUNCTION     [ reduce using rule 23 (prop -> prop DISJUNCTION prop .) ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 60

    (3) stat -> VARIABLE EQUALS prop . SEMICOLON
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    SEMICOLON       shift and go to state 71
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 63


state 61

    (31) prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .

    LEFT_BRACKET    reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    PLUS            reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    MINUS           reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    TIMES           reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    DIVIDE          reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    INT_DIVIDE      reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    MOD             reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    IN              reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    LESS_THAN_EQUAL_TO reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    EQUAL_TO        reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    NOT_EQUAL_TO    reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    GREATER_THAN_EQUAL_TO reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    CONS            reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    CONJUNCTION     reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    DISJUNCTION     reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    $end            reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    COMMA           reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    NEGATION        reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    VARIABLE        reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    TRUE            reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    FALSE           reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    INTEGER         reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    REAL            reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    STRING          reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    HASHTAG         reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 31 (prop -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)


state 62

    (34) prop_contents -> prop COMMA . prop_contents
    (33) prop_contents -> . prop
    (34) prop_contents -> . prop COMMA prop_contents
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 36
    prop_contents                  shift and go to state 72

state 63

    (40) prop -> prop LEFT_BRACKET . prop RIGHT_BRACKET
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 73

state 64

    (5) stat -> PRINT LEFT_PARENTHESIS prop . RIGHT_PARENTHESIS SEMICOLON
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    RIGHT_PARENTHESIS shift and go to state 74
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 63


state 65

    (24) prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .

    LEFT_BRACKET    reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    TIMES           reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    DIVIDE          reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    INT_DIVIDE      reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    MOD             reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    IN              reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL_TO reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    EQUAL_TO        reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    NOT_EQUAL_TO    reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL_TO reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    CONS            reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    DISJUNCTION     reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    $end            reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    NEGATION        reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    VARIABLE        reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    TRUE            reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    FALSE           reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    INTEGER         reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    REAL            reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    STRING          reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    HASHTAG         reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 24 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)


state 66

    (35) prop -> LEFT_PARENTHESIS prop COMMA . prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> LEFT_PARENTHESIS prop COMMA . RIGHT_PARENTHESIS
    (37) prop_tup_contents -> . prop
    (38) prop_tup_contents -> . prop COMMA prop_tup_contents
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    RIGHT_PARENTHESIS shift and go to state 77
    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 75
    prop_tup_contents              shift and go to state 76

state 67

    (39) prop -> HASHTAG prop prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    LEFT_BRACKET    reduce using rule 39 (prop -> HASHTAG prop prop .)
    PLUS            reduce using rule 39 (prop -> HASHTAG prop prop .)
    MINUS           reduce using rule 39 (prop -> HASHTAG prop prop .)
    TIMES           reduce using rule 39 (prop -> HASHTAG prop prop .)
    DIVIDE          reduce using rule 39 (prop -> HASHTAG prop prop .)
    INT_DIVIDE      reduce using rule 39 (prop -> HASHTAG prop prop .)
    MOD             reduce using rule 39 (prop -> HASHTAG prop prop .)
    IN              reduce using rule 39 (prop -> HASHTAG prop prop .)
    LESS_THAN       reduce using rule 39 (prop -> HASHTAG prop prop .)
    LESS_THAN_EQUAL_TO reduce using rule 39 (prop -> HASHTAG prop prop .)
    EQUAL_TO        reduce using rule 39 (prop -> HASHTAG prop prop .)
    NOT_EQUAL_TO    reduce using rule 39 (prop -> HASHTAG prop prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 39 (prop -> HASHTAG prop prop .)
    GREATER_THAN    reduce using rule 39 (prop -> HASHTAG prop prop .)
    CONS            reduce using rule 39 (prop -> HASHTAG prop prop .)
    CONJUNCTION     reduce using rule 39 (prop -> HASHTAG prop prop .)
    DISJUNCTION     reduce using rule 39 (prop -> HASHTAG prop prop .)
    $end            reduce using rule 39 (prop -> HASHTAG prop prop .)
    COMMA           reduce using rule 39 (prop -> HASHTAG prop prop .)
    RIGHT_BRACKET   reduce using rule 39 (prop -> HASHTAG prop prop .)
    RIGHT_PARENTHESIS reduce using rule 39 (prop -> HASHTAG prop prop .)
    NEGATION        reduce using rule 39 (prop -> HASHTAG prop prop .)
    LEFT_PARENTHESIS reduce using rule 39 (prop -> HASHTAG prop prop .)
    VARIABLE        reduce using rule 39 (prop -> HASHTAG prop prop .)
    TRUE            reduce using rule 39 (prop -> HASHTAG prop prop .)
    FALSE           reduce using rule 39 (prop -> HASHTAG prop prop .)
    INTEGER         reduce using rule 39 (prop -> HASHTAG prop prop .)
    REAL            reduce using rule 39 (prop -> HASHTAG prop prop .)
    STRING          reduce using rule 39 (prop -> HASHTAG prop prop .)
    HASHTAG         reduce using rule 39 (prop -> HASHTAG prop prop .)
    SEMICOLON       reduce using rule 39 (prop -> HASHTAG prop prop .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]
  ! INT_DIVIDE      [ shift and go to state 21 ]
  ! MOD             [ shift and go to state 22 ]
  ! IN              [ shift and go to state 23 ]
  ! LESS_THAN       [ shift and go to state 24 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 25 ]
  ! EQUAL_TO        [ shift and go to state 26 ]
  ! NOT_EQUAL_TO    [ shift and go to state 27 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! CONS            [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 31 ]
  ! DISJUNCTION     [ shift and go to state 32 ]
  ! LEFT_BRACKET    [ shift and go to state 63 ]


state 68

    (7) prop -> prop MINUS . prop
    (13) prop -> MINUS . INTEGER
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    INTEGER         shift and go to state 78
    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 45

state 69

    (40) prop -> prop LEFT_BRACKET . prop RIGHT_BRACKET
    (31) prop -> LEFT_BRACKET . prop_contents RIGHT_BRACKET
    (32) prop -> LEFT_BRACKET . RIGHT_BRACKET
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET
    (33) prop_contents -> . prop
    (34) prop_contents -> . prop COMMA prop_contents

    RIGHT_BRACKET   shift and go to state 35
    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 79
    prop_contents                  shift and go to state 34

state 70

    (4) stat -> prop LEFT_BRACKET prop RIGHT_BRACKET . EQUALS prop
    (40) prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .

    EQUALS          shift and go to state 80
    LEFT_BRACKET    reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    PLUS            reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    MINUS           reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    TIMES           reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    DIVIDE          reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    INT_DIVIDE      reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    MOD             reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    IN              reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    LESS_THAN_EQUAL_TO reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    EQUAL_TO        reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    NOT_EQUAL_TO    reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    GREATER_THAN_EQUAL_TO reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    CONS            reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    CONJUNCTION     reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    DISJUNCTION     reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    $end            reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)


state 71

    (3) stat -> VARIABLE EQUALS prop SEMICOLON .

    $end            reduce using rule 3 (stat -> VARIABLE EQUALS prop SEMICOLON .)


state 72

    (34) prop_contents -> prop COMMA prop_contents .

    RIGHT_BRACKET   reduce using rule 34 (prop_contents -> prop COMMA prop_contents .)


state 73

    (40) prop -> prop LEFT_BRACKET prop . RIGHT_BRACKET
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 81
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 63


state 74

    (5) stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 82


state 75

    (37) prop_tup_contents -> prop .
    (38) prop_tup_contents -> prop . COMMA prop_tup_contents
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    RIGHT_PARENTHESIS reduce using rule 37 (prop_tup_contents -> prop .)
    COMMA           shift and go to state 83
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 63


state 76

    (35) prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 84


state 77

    (36) prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .

    LEFT_BRACKET    reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    TIMES           reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    DIVIDE          reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    INT_DIVIDE      reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    MOD             reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    IN              reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL_TO reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    EQUAL_TO        reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    NOT_EQUAL_TO    reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL_TO reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    CONS            reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    DISJUNCTION     reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    $end            reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    NEGATION        reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    VARIABLE        reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    TRUE            reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    FALSE           reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    INTEGER         reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    REAL            reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    STRING          reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    HASHTAG         reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 36 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)


state 78

    (13) prop -> MINUS INTEGER .
    (28) prop -> INTEGER .

  ! reduce/reduce conflict for PLUS resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for MINUS resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for TIMES resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for INT_DIVIDE resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for MOD resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for IN resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for LESS_THAN_EQUAL_TO resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for EQUAL_TO resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for NOT_EQUAL_TO resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN_EQUAL_TO resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for CONS resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for CONJUNCTION resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for DISJUNCTION resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for $end resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for RIGHT_BRACKET resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for NEGATION resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for TRUE resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for FALSE resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for INTEGER resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for REAL resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for HASHTAG resolved using rule 13 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 13 (prop -> MINUS INTEGER .)
    PLUS            reduce using rule 13 (prop -> MINUS INTEGER .)
    MINUS           reduce using rule 13 (prop -> MINUS INTEGER .)
    TIMES           reduce using rule 13 (prop -> MINUS INTEGER .)
    DIVIDE          reduce using rule 13 (prop -> MINUS INTEGER .)
    INT_DIVIDE      reduce using rule 13 (prop -> MINUS INTEGER .)
    MOD             reduce using rule 13 (prop -> MINUS INTEGER .)
    IN              reduce using rule 13 (prop -> MINUS INTEGER .)
    LESS_THAN       reduce using rule 13 (prop -> MINUS INTEGER .)
    LESS_THAN_EQUAL_TO reduce using rule 13 (prop -> MINUS INTEGER .)
    EQUAL_TO        reduce using rule 13 (prop -> MINUS INTEGER .)
    NOT_EQUAL_TO    reduce using rule 13 (prop -> MINUS INTEGER .)
    GREATER_THAN_EQUAL_TO reduce using rule 13 (prop -> MINUS INTEGER .)
    GREATER_THAN    reduce using rule 13 (prop -> MINUS INTEGER .)
    CONS            reduce using rule 13 (prop -> MINUS INTEGER .)
    CONJUNCTION     reduce using rule 13 (prop -> MINUS INTEGER .)
    DISJUNCTION     reduce using rule 13 (prop -> MINUS INTEGER .)
    LEFT_BRACKET    reduce using rule 13 (prop -> MINUS INTEGER .)
    $end            reduce using rule 13 (prop -> MINUS INTEGER .)
    COMMA           reduce using rule 13 (prop -> MINUS INTEGER .)
    RIGHT_BRACKET   reduce using rule 13 (prop -> MINUS INTEGER .)
    RIGHT_PARENTHESIS reduce using rule 13 (prop -> MINUS INTEGER .)
    NEGATION        reduce using rule 13 (prop -> MINUS INTEGER .)
    LEFT_PARENTHESIS reduce using rule 13 (prop -> MINUS INTEGER .)
    VARIABLE        reduce using rule 13 (prop -> MINUS INTEGER .)
    TRUE            reduce using rule 13 (prop -> MINUS INTEGER .)
    FALSE           reduce using rule 13 (prop -> MINUS INTEGER .)
    INTEGER         reduce using rule 13 (prop -> MINUS INTEGER .)
    REAL            reduce using rule 13 (prop -> MINUS INTEGER .)
    STRING          reduce using rule 13 (prop -> MINUS INTEGER .)
    HASHTAG         reduce using rule 13 (prop -> MINUS INTEGER .)
    SEMICOLON       reduce using rule 13 (prop -> MINUS INTEGER .)

  ! PLUS            [ reduce using rule 28 (prop -> INTEGER .) ]
  ! MINUS           [ reduce using rule 28 (prop -> INTEGER .) ]
  ! TIMES           [ reduce using rule 28 (prop -> INTEGER .) ]
  ! DIVIDE          [ reduce using rule 28 (prop -> INTEGER .) ]
  ! INT_DIVIDE      [ reduce using rule 28 (prop -> INTEGER .) ]
  ! MOD             [ reduce using rule 28 (prop -> INTEGER .) ]
  ! IN              [ reduce using rule 28 (prop -> INTEGER .) ]
  ! LESS_THAN       [ reduce using rule 28 (prop -> INTEGER .) ]
  ! LESS_THAN_EQUAL_TO [ reduce using rule 28 (prop -> INTEGER .) ]
  ! EQUAL_TO        [ reduce using rule 28 (prop -> INTEGER .) ]
  ! NOT_EQUAL_TO    [ reduce using rule 28 (prop -> INTEGER .) ]
  ! GREATER_THAN_EQUAL_TO [ reduce using rule 28 (prop -> INTEGER .) ]
  ! GREATER_THAN    [ reduce using rule 28 (prop -> INTEGER .) ]
  ! CONS            [ reduce using rule 28 (prop -> INTEGER .) ]
  ! CONJUNCTION     [ reduce using rule 28 (prop -> INTEGER .) ]
  ! DISJUNCTION     [ reduce using rule 28 (prop -> INTEGER .) ]
  ! LEFT_BRACKET    [ reduce using rule 28 (prop -> INTEGER .) ]
  ! $end            [ reduce using rule 28 (prop -> INTEGER .) ]
  ! COMMA           [ reduce using rule 28 (prop -> INTEGER .) ]
  ! RIGHT_BRACKET   [ reduce using rule 28 (prop -> INTEGER .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 28 (prop -> INTEGER .) ]
  ! NEGATION        [ reduce using rule 28 (prop -> INTEGER .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 28 (prop -> INTEGER .) ]
  ! VARIABLE        [ reduce using rule 28 (prop -> INTEGER .) ]
  ! TRUE            [ reduce using rule 28 (prop -> INTEGER .) ]
  ! FALSE           [ reduce using rule 28 (prop -> INTEGER .) ]
  ! INTEGER         [ reduce using rule 28 (prop -> INTEGER .) ]
  ! REAL            [ reduce using rule 28 (prop -> INTEGER .) ]
  ! STRING          [ reduce using rule 28 (prop -> INTEGER .) ]
  ! HASHTAG         [ reduce using rule 28 (prop -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 28 (prop -> INTEGER .) ]


state 79

    (40) prop -> prop LEFT_BRACKET prop . RIGHT_BRACKET
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET
    (33) prop_contents -> prop .
    (34) prop_contents -> prop . COMMA prop_contents

  ! shift/reduce conflict for RIGHT_BRACKET resolved as shift
    RIGHT_BRACKET   shift and go to state 81
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 63
    COMMA           shift and go to state 62

  ! RIGHT_BRACKET   [ reduce using rule 33 (prop_contents -> prop .) ]


state 80

    (4) stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS . prop
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 85

state 81

    (40) prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .

    COMMA           reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    PLUS            reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    MINUS           reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    TIMES           reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    DIVIDE          reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    INT_DIVIDE      reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    MOD             reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    IN              reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    LESS_THAN_EQUAL_TO reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    EQUAL_TO        reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    NOT_EQUAL_TO    reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    GREATER_THAN_EQUAL_TO reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    CONS            reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    CONJUNCTION     reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    DISJUNCTION     reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    $end            reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    NEGATION        reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    VARIABLE        reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    TRUE            reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    FALSE           reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    INTEGER         reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    REAL            reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    STRING          reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    HASHTAG         reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 40 (prop -> prop LEFT_BRACKET prop RIGHT_BRACKET .)


state 82

    (5) stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .

    $end            reduce using rule 5 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)


state 83

    (38) prop_tup_contents -> prop COMMA . prop_tup_contents
    (37) prop_tup_contents -> . prop
    (38) prop_tup_contents -> . prop COMMA prop_tup_contents
    (6) prop -> . prop PLUS prop
    (7) prop -> . prop MINUS prop
    (8) prop -> . prop TIMES prop
    (9) prop -> . prop DIVIDE prop
    (10) prop -> . prop INT_DIVIDE prop
    (11) prop -> . prop MOD prop
    (12) prop -> . prop IN prop
    (13) prop -> . MINUS INTEGER
    (14) prop -> . prop LESS_THAN prop
    (15) prop -> . prop LESS_THAN_EQUAL_TO prop
    (16) prop -> . prop EQUAL_TO prop
    (17) prop -> . prop NOT_EQUAL_TO prop
    (18) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (19) prop -> . prop GREATER_THAN prop
    (20) prop -> . prop CONS prop
    (21) prop -> . NEGATION prop
    (22) prop -> . prop CONJUNCTION prop
    (23) prop -> . prop DISJUNCTION prop
    (24) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (25) prop -> . VARIABLE
    (26) prop -> . TRUE
    (27) prop -> . FALSE
    (28) prop -> . INTEGER
    (29) prop -> . REAL
    (30) prop -> . STRING
    (31) prop -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (32) prop -> . LEFT_BRACKET RIGHT_BRACKET
    (35) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (36) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (39) prop -> . HASHTAG prop prop
    (40) prop -> . prop LEFT_BRACKET prop RIGHT_BRACKET

    MINUS           shift and go to state 8
    NEGATION        shift and go to state 10
    LEFT_PARENTHESIS shift and go to state 7
    VARIABLE        shift and go to state 37
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    INTEGER         shift and go to state 9
    REAL            shift and go to state 13
    STRING          shift and go to state 14
    LEFT_BRACKET    shift and go to state 5
    HASHTAG         shift and go to state 15

    prop                           shift and go to state 75
    prop_tup_contents              shift and go to state 86

state 84

    (35) prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .

    LEFT_BRACKET    reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    TIMES           reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    DIVIDE          reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    INT_DIVIDE      reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    MOD             reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    IN              reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL_TO reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    EQUAL_TO        reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    NOT_EQUAL_TO    reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL_TO reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    CONS            reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    DISJUNCTION     reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    $end            reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    NEGATION        reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    VARIABLE        reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    TRUE            reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    FALSE           reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    INTEGER         reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    REAL            reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    STRING          reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    HASHTAG         reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 35 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)


state 85

    (4) stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .
    (6) prop -> prop . PLUS prop
    (7) prop -> prop . MINUS prop
    (8) prop -> prop . TIMES prop
    (9) prop -> prop . DIVIDE prop
    (10) prop -> prop . INT_DIVIDE prop
    (11) prop -> prop . MOD prop
    (12) prop -> prop . IN prop
    (14) prop -> prop . LESS_THAN prop
    (15) prop -> prop . LESS_THAN_EQUAL_TO prop
    (16) prop -> prop . EQUAL_TO prop
    (17) prop -> prop . NOT_EQUAL_TO prop
    (18) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (19) prop -> prop . GREATER_THAN prop
    (20) prop -> prop . CONS prop
    (22) prop -> prop . CONJUNCTION prop
    (23) prop -> prop . DISJUNCTION prop
    (40) prop -> prop . LEFT_BRACKET prop RIGHT_BRACKET

    $end            reduce using rule 4 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    INT_DIVIDE      shift and go to state 21
    MOD             shift and go to state 22
    IN              shift and go to state 23
    LESS_THAN       shift and go to state 24
    LESS_THAN_EQUAL_TO shift and go to state 25
    EQUAL_TO        shift and go to state 26
    NOT_EQUAL_TO    shift and go to state 27
    GREATER_THAN_EQUAL_TO shift and go to state 28
    GREATER_THAN    shift and go to state 29
    CONS            shift and go to state 30
    CONJUNCTION     shift and go to state 31
    DISJUNCTION     shift and go to state 32
    LEFT_BRACKET    shift and go to state 63


state 86

    (38) prop_tup_contents -> prop COMMA prop_tup_contents .

    RIGHT_PARENTHESIS reduce using rule 38 (prop_tup_contents -> prop COMMA prop_tup_contents .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RIGHT_BRACKET in state 79 resolved as shift
WARNING: reduce/reduce conflict in state 78 resolved using rule (prop -> MINUS INTEGER)
WARNING: rejected rule (prop -> INTEGER) in state 78
