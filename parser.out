Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RAISED_TO_POWER_OF

Grammar

Rule 0     S' -> expr
Rule 1     expr -> stat
Rule 2     expr -> prop
Rule 3     stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents
Rule 4     block_contents -> <empty>
Rule 5     block_contents -> stat block_contents
Rule 6     stat -> VARIABLE EQUALS prop SEMICOLON
Rule 7     stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
Rule 8     stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON
Rule 9     prop -> prop PLUS prop
Rule 10    prop -> prop MINUS prop
Rule 11    prop -> prop TIMES prop
Rule 12    prop -> prop DIVIDE prop
Rule 13    prop -> prop INT_DIVIDE prop
Rule 14    prop -> prop MOD prop
Rule 15    prop -> prop IN prop
Rule 16    prop -> MINUS INTEGER
Rule 17    prop -> prop LESS_THAN prop
Rule 18    prop -> prop LESS_THAN_EQUAL_TO prop
Rule 19    prop -> prop EQUAL_TO prop
Rule 20    prop -> prop NOT_EQUAL_TO prop
Rule 21    prop -> prop GREATER_THAN_EQUAL_TO prop
Rule 22    prop -> prop GREATER_THAN prop
Rule 23    prop -> prop CONS prop
Rule 24    prop -> NEGATION prop
Rule 25    prop -> prop CONJUNCTION prop
Rule 26    prop -> prop DISJUNCTION prop
Rule 27    prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
Rule 28    prop -> VARIABLE
Rule 29    prop -> TRUE
Rule 30    prop -> FALSE
Rule 31    prop -> INTEGER
Rule 32    prop -> REAL
Rule 33    prop -> STRING
Rule 34    prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET
Rule 35    prop_BS -> LEFT_BRACKET RIGHT_BRACKET
Rule 36    prop_contents -> prop
Rule 37    prop_contents -> prop COMMA prop_contents
Rule 38    prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET
Rule 39    prop -> prop_BS
Rule 40    prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
Rule 41    prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
Rule 42    prop_tup_contents -> prop
Rule 43    prop_tup_contents -> prop COMMA prop_tup_contents
Rule 44    prop -> HASHTAG prop prop

Terminals, with rules where they appear

COMMA                : 37 40 41 43
CONJUNCTION          : 25
CONS                 : 23
DISJUNCTION          : 26
DIVIDE               : 12
EQUALS               : 6 7
EQUAL_TO             : 19
FALSE                : 30
GREATER_THAN         : 22
GREATER_THAN_EQUAL_TO : 21
HASHTAG              : 44
IN                   : 15
INTEGER              : 16 31
INT_DIVIDE           : 13
LEFT_BRACKET         : 7 34 35 38
LEFT_CURLY_BRACE     : 3
LEFT_PARENTHESIS     : 8 27 40 41
LESS_THAN            : 17
LESS_THAN_EQUAL_TO   : 18
MINUS                : 10 16
MOD                  : 14
NEGATION             : 24
NOT_EQUAL_TO         : 20
PLUS                 : 9
PRINT                : 8
RAISED_TO_POWER_OF   : 
REAL                 : 32
RIGHT_BRACKET        : 7 34 35 38
RIGHT_CURLY_BRACE    : 3
RIGHT_PARENTHESIS    : 8 27 40 41
SEMICOLON            : 6 8
STRING               : 33
TIMES                : 11
TRUE                 : 29
VARIABLE             : 6 28
error                : 

Nonterminals, with rules where they appear

block_contents       : 3 3 5
expr                 : 0
prop                 : 2 6 7 7 7 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 25 25 26 26 27 36 37 38 40 41 42 43 44 44
prop_BS              : 38 39
prop_contents        : 34 37
prop_tup_contents    : 40 43
stat                 : 1 5

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . stat
    (2) expr -> . prop
    (3) stat -> . LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents
    (6) stat -> . VARIABLE EQUALS prop SEMICOLON
    (7) stat -> . prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
    (8) stat -> . PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    LEFT_CURLY_BRACE shift and go to state 4
    VARIABLE        shift and go to state 5
    PRINT           shift and go to state 7
    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    expr                           shift and go to state 1
    stat                           shift and go to state 2
    prop                           shift and go to state 3
    prop_BS                        shift and go to state 16

state 1

    (0) S' -> expr .



state 2

    (1) expr -> stat .

    $end            reduce using rule 1 (expr -> stat .)


state 3

    (2) expr -> prop .
    (7) stat -> prop . LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    $end            reduce using rule 2 (expr -> prop .)
    LEFT_BRACKET    shift and go to state 18
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34


state 4

    (3) stat -> LEFT_CURLY_BRACE . block_contents RIGHT_CURLY_BRACE block_contents
    (4) block_contents -> .
    (5) block_contents -> . stat block_contents
    (3) stat -> . LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents
    (6) stat -> . VARIABLE EQUALS prop SEMICOLON
    (7) stat -> . prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
    (8) stat -> . PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    RIGHT_CURLY_BRACE reduce using rule 4 (block_contents -> .)
    LEFT_CURLY_BRACE shift and go to state 4
    VARIABLE        shift and go to state 5
    PRINT           shift and go to state 7
    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    block_contents                 shift and go to state 35
    stat                           shift and go to state 36
    prop                           shift and go to state 37
    prop_BS                        shift and go to state 16

state 5

    (6) stat -> VARIABLE . EQUALS prop SEMICOLON
    (28) prop -> VARIABLE .

    EQUALS          shift and go to state 38
    LEFT_BRACKET    reduce using rule 28 (prop -> VARIABLE .)
    PLUS            reduce using rule 28 (prop -> VARIABLE .)
    MINUS           reduce using rule 28 (prop -> VARIABLE .)
    TIMES           reduce using rule 28 (prop -> VARIABLE .)
    DIVIDE          reduce using rule 28 (prop -> VARIABLE .)
    INT_DIVIDE      reduce using rule 28 (prop -> VARIABLE .)
    MOD             reduce using rule 28 (prop -> VARIABLE .)
    IN              reduce using rule 28 (prop -> VARIABLE .)
    LESS_THAN       reduce using rule 28 (prop -> VARIABLE .)
    LESS_THAN_EQUAL_TO reduce using rule 28 (prop -> VARIABLE .)
    EQUAL_TO        reduce using rule 28 (prop -> VARIABLE .)
    NOT_EQUAL_TO    reduce using rule 28 (prop -> VARIABLE .)
    GREATER_THAN_EQUAL_TO reduce using rule 28 (prop -> VARIABLE .)
    GREATER_THAN    reduce using rule 28 (prop -> VARIABLE .)
    CONS            reduce using rule 28 (prop -> VARIABLE .)
    CONJUNCTION     reduce using rule 28 (prop -> VARIABLE .)
    DISJUNCTION     reduce using rule 28 (prop -> VARIABLE .)
    $end            reduce using rule 28 (prop -> VARIABLE .)


state 6

    (34) prop_BS -> LEFT_BRACKET . prop_contents RIGHT_BRACKET
    (35) prop_BS -> LEFT_BRACKET . RIGHT_BRACKET
    (36) prop_contents -> . prop
    (37) prop_contents -> . prop COMMA prop_contents
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 40
    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop_contents                  shift and go to state 39
    prop                           shift and go to state 41
    prop_BS                        shift and go to state 16

state 7

    (8) stat -> PRINT . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS shift and go to state 43


state 8

    (27) prop -> LEFT_PARENTHESIS . prop RIGHT_PARENTHESIS
    (40) prop -> LEFT_PARENTHESIS . prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> LEFT_PARENTHESIS . prop COMMA RIGHT_PARENTHESIS
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 44
    prop_BS                        shift and go to state 16

state 9

    (16) prop -> MINUS . INTEGER

    INTEGER         shift and go to state 45


state 10

    (31) prop -> INTEGER .

    LEFT_BRACKET    reduce using rule 31 (prop -> INTEGER .)
    PLUS            reduce using rule 31 (prop -> INTEGER .)
    MINUS           reduce using rule 31 (prop -> INTEGER .)
    TIMES           reduce using rule 31 (prop -> INTEGER .)
    DIVIDE          reduce using rule 31 (prop -> INTEGER .)
    INT_DIVIDE      reduce using rule 31 (prop -> INTEGER .)
    MOD             reduce using rule 31 (prop -> INTEGER .)
    IN              reduce using rule 31 (prop -> INTEGER .)
    LESS_THAN       reduce using rule 31 (prop -> INTEGER .)
    LESS_THAN_EQUAL_TO reduce using rule 31 (prop -> INTEGER .)
    EQUAL_TO        reduce using rule 31 (prop -> INTEGER .)
    NOT_EQUAL_TO    reduce using rule 31 (prop -> INTEGER .)
    GREATER_THAN_EQUAL_TO reduce using rule 31 (prop -> INTEGER .)
    GREATER_THAN    reduce using rule 31 (prop -> INTEGER .)
    CONS            reduce using rule 31 (prop -> INTEGER .)
    CONJUNCTION     reduce using rule 31 (prop -> INTEGER .)
    DISJUNCTION     reduce using rule 31 (prop -> INTEGER .)
    $end            reduce using rule 31 (prop -> INTEGER .)
    COMMA           reduce using rule 31 (prop -> INTEGER .)
    RIGHT_BRACKET   reduce using rule 31 (prop -> INTEGER .)
    RIGHT_PARENTHESIS reduce using rule 31 (prop -> INTEGER .)
    NEGATION        reduce using rule 31 (prop -> INTEGER .)
    LEFT_PARENTHESIS reduce using rule 31 (prop -> INTEGER .)
    VARIABLE        reduce using rule 31 (prop -> INTEGER .)
    TRUE            reduce using rule 31 (prop -> INTEGER .)
    FALSE           reduce using rule 31 (prop -> INTEGER .)
    INTEGER         reduce using rule 31 (prop -> INTEGER .)
    REAL            reduce using rule 31 (prop -> INTEGER .)
    STRING          reduce using rule 31 (prop -> INTEGER .)
    HASHTAG         reduce using rule 31 (prop -> INTEGER .)
    SEMICOLON       reduce using rule 31 (prop -> INTEGER .)
    LEFT_CURLY_BRACE reduce using rule 31 (prop -> INTEGER .)
    PRINT           reduce using rule 31 (prop -> INTEGER .)
    RIGHT_CURLY_BRACE reduce using rule 31 (prop -> INTEGER .)


state 11

    (24) prop -> NEGATION . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 46
    prop_BS                        shift and go to state 16

state 12

    (29) prop -> TRUE .

    LEFT_BRACKET    reduce using rule 29 (prop -> TRUE .)
    PLUS            reduce using rule 29 (prop -> TRUE .)
    MINUS           reduce using rule 29 (prop -> TRUE .)
    TIMES           reduce using rule 29 (prop -> TRUE .)
    DIVIDE          reduce using rule 29 (prop -> TRUE .)
    INT_DIVIDE      reduce using rule 29 (prop -> TRUE .)
    MOD             reduce using rule 29 (prop -> TRUE .)
    IN              reduce using rule 29 (prop -> TRUE .)
    LESS_THAN       reduce using rule 29 (prop -> TRUE .)
    LESS_THAN_EQUAL_TO reduce using rule 29 (prop -> TRUE .)
    EQUAL_TO        reduce using rule 29 (prop -> TRUE .)
    NOT_EQUAL_TO    reduce using rule 29 (prop -> TRUE .)
    GREATER_THAN_EQUAL_TO reduce using rule 29 (prop -> TRUE .)
    GREATER_THAN    reduce using rule 29 (prop -> TRUE .)
    CONS            reduce using rule 29 (prop -> TRUE .)
    CONJUNCTION     reduce using rule 29 (prop -> TRUE .)
    DISJUNCTION     reduce using rule 29 (prop -> TRUE .)
    $end            reduce using rule 29 (prop -> TRUE .)
    COMMA           reduce using rule 29 (prop -> TRUE .)
    RIGHT_BRACKET   reduce using rule 29 (prop -> TRUE .)
    RIGHT_PARENTHESIS reduce using rule 29 (prop -> TRUE .)
    NEGATION        reduce using rule 29 (prop -> TRUE .)
    LEFT_PARENTHESIS reduce using rule 29 (prop -> TRUE .)
    VARIABLE        reduce using rule 29 (prop -> TRUE .)
    TRUE            reduce using rule 29 (prop -> TRUE .)
    FALSE           reduce using rule 29 (prop -> TRUE .)
    INTEGER         reduce using rule 29 (prop -> TRUE .)
    REAL            reduce using rule 29 (prop -> TRUE .)
    STRING          reduce using rule 29 (prop -> TRUE .)
    HASHTAG         reduce using rule 29 (prop -> TRUE .)
    SEMICOLON       reduce using rule 29 (prop -> TRUE .)
    LEFT_CURLY_BRACE reduce using rule 29 (prop -> TRUE .)
    PRINT           reduce using rule 29 (prop -> TRUE .)
    RIGHT_CURLY_BRACE reduce using rule 29 (prop -> TRUE .)


state 13

    (30) prop -> FALSE .

    LEFT_BRACKET    reduce using rule 30 (prop -> FALSE .)
    PLUS            reduce using rule 30 (prop -> FALSE .)
    MINUS           reduce using rule 30 (prop -> FALSE .)
    TIMES           reduce using rule 30 (prop -> FALSE .)
    DIVIDE          reduce using rule 30 (prop -> FALSE .)
    INT_DIVIDE      reduce using rule 30 (prop -> FALSE .)
    MOD             reduce using rule 30 (prop -> FALSE .)
    IN              reduce using rule 30 (prop -> FALSE .)
    LESS_THAN       reduce using rule 30 (prop -> FALSE .)
    LESS_THAN_EQUAL_TO reduce using rule 30 (prop -> FALSE .)
    EQUAL_TO        reduce using rule 30 (prop -> FALSE .)
    NOT_EQUAL_TO    reduce using rule 30 (prop -> FALSE .)
    GREATER_THAN_EQUAL_TO reduce using rule 30 (prop -> FALSE .)
    GREATER_THAN    reduce using rule 30 (prop -> FALSE .)
    CONS            reduce using rule 30 (prop -> FALSE .)
    CONJUNCTION     reduce using rule 30 (prop -> FALSE .)
    DISJUNCTION     reduce using rule 30 (prop -> FALSE .)
    $end            reduce using rule 30 (prop -> FALSE .)
    COMMA           reduce using rule 30 (prop -> FALSE .)
    RIGHT_BRACKET   reduce using rule 30 (prop -> FALSE .)
    RIGHT_PARENTHESIS reduce using rule 30 (prop -> FALSE .)
    NEGATION        reduce using rule 30 (prop -> FALSE .)
    LEFT_PARENTHESIS reduce using rule 30 (prop -> FALSE .)
    VARIABLE        reduce using rule 30 (prop -> FALSE .)
    TRUE            reduce using rule 30 (prop -> FALSE .)
    FALSE           reduce using rule 30 (prop -> FALSE .)
    INTEGER         reduce using rule 30 (prop -> FALSE .)
    REAL            reduce using rule 30 (prop -> FALSE .)
    STRING          reduce using rule 30 (prop -> FALSE .)
    HASHTAG         reduce using rule 30 (prop -> FALSE .)
    SEMICOLON       reduce using rule 30 (prop -> FALSE .)
    LEFT_CURLY_BRACE reduce using rule 30 (prop -> FALSE .)
    PRINT           reduce using rule 30 (prop -> FALSE .)
    RIGHT_CURLY_BRACE reduce using rule 30 (prop -> FALSE .)


state 14

    (32) prop -> REAL .

    LEFT_BRACKET    reduce using rule 32 (prop -> REAL .)
    PLUS            reduce using rule 32 (prop -> REAL .)
    MINUS           reduce using rule 32 (prop -> REAL .)
    TIMES           reduce using rule 32 (prop -> REAL .)
    DIVIDE          reduce using rule 32 (prop -> REAL .)
    INT_DIVIDE      reduce using rule 32 (prop -> REAL .)
    MOD             reduce using rule 32 (prop -> REAL .)
    IN              reduce using rule 32 (prop -> REAL .)
    LESS_THAN       reduce using rule 32 (prop -> REAL .)
    LESS_THAN_EQUAL_TO reduce using rule 32 (prop -> REAL .)
    EQUAL_TO        reduce using rule 32 (prop -> REAL .)
    NOT_EQUAL_TO    reduce using rule 32 (prop -> REAL .)
    GREATER_THAN_EQUAL_TO reduce using rule 32 (prop -> REAL .)
    GREATER_THAN    reduce using rule 32 (prop -> REAL .)
    CONS            reduce using rule 32 (prop -> REAL .)
    CONJUNCTION     reduce using rule 32 (prop -> REAL .)
    DISJUNCTION     reduce using rule 32 (prop -> REAL .)
    $end            reduce using rule 32 (prop -> REAL .)
    COMMA           reduce using rule 32 (prop -> REAL .)
    RIGHT_BRACKET   reduce using rule 32 (prop -> REAL .)
    RIGHT_PARENTHESIS reduce using rule 32 (prop -> REAL .)
    NEGATION        reduce using rule 32 (prop -> REAL .)
    LEFT_PARENTHESIS reduce using rule 32 (prop -> REAL .)
    VARIABLE        reduce using rule 32 (prop -> REAL .)
    TRUE            reduce using rule 32 (prop -> REAL .)
    FALSE           reduce using rule 32 (prop -> REAL .)
    INTEGER         reduce using rule 32 (prop -> REAL .)
    REAL            reduce using rule 32 (prop -> REAL .)
    STRING          reduce using rule 32 (prop -> REAL .)
    HASHTAG         reduce using rule 32 (prop -> REAL .)
    SEMICOLON       reduce using rule 32 (prop -> REAL .)
    LEFT_CURLY_BRACE reduce using rule 32 (prop -> REAL .)
    PRINT           reduce using rule 32 (prop -> REAL .)
    RIGHT_CURLY_BRACE reduce using rule 32 (prop -> REAL .)


state 15

    (33) prop -> STRING .

    LEFT_BRACKET    reduce using rule 33 (prop -> STRING .)
    PLUS            reduce using rule 33 (prop -> STRING .)
    MINUS           reduce using rule 33 (prop -> STRING .)
    TIMES           reduce using rule 33 (prop -> STRING .)
    DIVIDE          reduce using rule 33 (prop -> STRING .)
    INT_DIVIDE      reduce using rule 33 (prop -> STRING .)
    MOD             reduce using rule 33 (prop -> STRING .)
    IN              reduce using rule 33 (prop -> STRING .)
    LESS_THAN       reduce using rule 33 (prop -> STRING .)
    LESS_THAN_EQUAL_TO reduce using rule 33 (prop -> STRING .)
    EQUAL_TO        reduce using rule 33 (prop -> STRING .)
    NOT_EQUAL_TO    reduce using rule 33 (prop -> STRING .)
    GREATER_THAN_EQUAL_TO reduce using rule 33 (prop -> STRING .)
    GREATER_THAN    reduce using rule 33 (prop -> STRING .)
    CONS            reduce using rule 33 (prop -> STRING .)
    CONJUNCTION     reduce using rule 33 (prop -> STRING .)
    DISJUNCTION     reduce using rule 33 (prop -> STRING .)
    $end            reduce using rule 33 (prop -> STRING .)
    COMMA           reduce using rule 33 (prop -> STRING .)
    RIGHT_BRACKET   reduce using rule 33 (prop -> STRING .)
    RIGHT_PARENTHESIS reduce using rule 33 (prop -> STRING .)
    NEGATION        reduce using rule 33 (prop -> STRING .)
    LEFT_PARENTHESIS reduce using rule 33 (prop -> STRING .)
    VARIABLE        reduce using rule 33 (prop -> STRING .)
    TRUE            reduce using rule 33 (prop -> STRING .)
    FALSE           reduce using rule 33 (prop -> STRING .)
    INTEGER         reduce using rule 33 (prop -> STRING .)
    REAL            reduce using rule 33 (prop -> STRING .)
    STRING          reduce using rule 33 (prop -> STRING .)
    HASHTAG         reduce using rule 33 (prop -> STRING .)
    SEMICOLON       reduce using rule 33 (prop -> STRING .)
    LEFT_CURLY_BRACE reduce using rule 33 (prop -> STRING .)
    PRINT           reduce using rule 33 (prop -> STRING .)
    RIGHT_CURLY_BRACE reduce using rule 33 (prop -> STRING .)


state 16

    (38) prop -> prop_BS . LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> prop_BS .

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    LEFT_BRACKET    shift and go to state 47
    PLUS            reduce using rule 39 (prop -> prop_BS .)
    MINUS           reduce using rule 39 (prop -> prop_BS .)
    TIMES           reduce using rule 39 (prop -> prop_BS .)
    DIVIDE          reduce using rule 39 (prop -> prop_BS .)
    INT_DIVIDE      reduce using rule 39 (prop -> prop_BS .)
    MOD             reduce using rule 39 (prop -> prop_BS .)
    IN              reduce using rule 39 (prop -> prop_BS .)
    LESS_THAN       reduce using rule 39 (prop -> prop_BS .)
    LESS_THAN_EQUAL_TO reduce using rule 39 (prop -> prop_BS .)
    EQUAL_TO        reduce using rule 39 (prop -> prop_BS .)
    NOT_EQUAL_TO    reduce using rule 39 (prop -> prop_BS .)
    GREATER_THAN_EQUAL_TO reduce using rule 39 (prop -> prop_BS .)
    GREATER_THAN    reduce using rule 39 (prop -> prop_BS .)
    CONS            reduce using rule 39 (prop -> prop_BS .)
    CONJUNCTION     reduce using rule 39 (prop -> prop_BS .)
    DISJUNCTION     reduce using rule 39 (prop -> prop_BS .)
    $end            reduce using rule 39 (prop -> prop_BS .)
    COMMA           reduce using rule 39 (prop -> prop_BS .)
    RIGHT_BRACKET   reduce using rule 39 (prop -> prop_BS .)
    RIGHT_PARENTHESIS reduce using rule 39 (prop -> prop_BS .)
    NEGATION        reduce using rule 39 (prop -> prop_BS .)
    LEFT_PARENTHESIS reduce using rule 39 (prop -> prop_BS .)
    VARIABLE        reduce using rule 39 (prop -> prop_BS .)
    TRUE            reduce using rule 39 (prop -> prop_BS .)
    FALSE           reduce using rule 39 (prop -> prop_BS .)
    INTEGER         reduce using rule 39 (prop -> prop_BS .)
    REAL            reduce using rule 39 (prop -> prop_BS .)
    STRING          reduce using rule 39 (prop -> prop_BS .)
    HASHTAG         reduce using rule 39 (prop -> prop_BS .)
    SEMICOLON       reduce using rule 39 (prop -> prop_BS .)
    LEFT_CURLY_BRACE reduce using rule 39 (prop -> prop_BS .)
    PRINT           reduce using rule 39 (prop -> prop_BS .)
    RIGHT_CURLY_BRACE reduce using rule 39 (prop -> prop_BS .)

  ! LEFT_BRACKET    [ reduce using rule 39 (prop -> prop_BS .) ]


state 17

    (44) prop -> HASHTAG . prop prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 48
    prop_BS                        shift and go to state 16

state 18

    (7) stat -> prop LEFT_BRACKET . prop RIGHT_BRACKET EQUALS prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 49
    prop_BS                        shift and go to state 16

state 19

    (9) prop -> prop PLUS . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 50
    prop_BS                        shift and go to state 16

state 20

    (10) prop -> prop MINUS . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 51
    prop_BS                        shift and go to state 16

state 21

    (11) prop -> prop TIMES . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 52
    prop_BS                        shift and go to state 16

state 22

    (12) prop -> prop DIVIDE . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 53
    prop_BS                        shift and go to state 16

state 23

    (13) prop -> prop INT_DIVIDE . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 54
    prop_BS                        shift and go to state 16

state 24

    (14) prop -> prop MOD . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 55
    prop_BS                        shift and go to state 16

state 25

    (15) prop -> prop IN . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 56
    prop_BS                        shift and go to state 16

state 26

    (17) prop -> prop LESS_THAN . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 57
    prop_BS                        shift and go to state 16

state 27

    (18) prop -> prop LESS_THAN_EQUAL_TO . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 58
    prop_BS                        shift and go to state 16

state 28

    (19) prop -> prop EQUAL_TO . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 59
    prop_BS                        shift and go to state 16

state 29

    (20) prop -> prop NOT_EQUAL_TO . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 60
    prop_BS                        shift and go to state 16

state 30

    (21) prop -> prop GREATER_THAN_EQUAL_TO . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 61
    prop_BS                        shift and go to state 16

state 31

    (22) prop -> prop GREATER_THAN . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 62
    prop_BS                        shift and go to state 16

state 32

    (23) prop -> prop CONS . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 63
    prop_BS                        shift and go to state 16

state 33

    (25) prop -> prop CONJUNCTION . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 64
    prop_BS                        shift and go to state 16

state 34

    (26) prop -> prop DISJUNCTION . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 65
    prop_BS                        shift and go to state 16

state 35

    (3) stat -> LEFT_CURLY_BRACE block_contents . RIGHT_CURLY_BRACE block_contents

    RIGHT_CURLY_BRACE shift and go to state 66


state 36

    (5) block_contents -> stat . block_contents
    (4) block_contents -> .
    (5) block_contents -> . stat block_contents
    (3) stat -> . LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents
    (6) stat -> . VARIABLE EQUALS prop SEMICOLON
    (7) stat -> . prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
    (8) stat -> . PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_CURLY_BRACE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    RIGHT_CURLY_BRACE reduce using rule 4 (block_contents -> .)
    $end            reduce using rule 4 (block_contents -> .)
    LEFT_CURLY_BRACE shift and go to state 4
    VARIABLE        shift and go to state 5
    PRINT           shift and go to state 7
    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

  ! LEFT_CURLY_BRACE [ reduce using rule 4 (block_contents -> .) ]
  ! VARIABLE        [ reduce using rule 4 (block_contents -> .) ]
  ! PRINT           [ reduce using rule 4 (block_contents -> .) ]
  ! MINUS           [ reduce using rule 4 (block_contents -> .) ]
  ! NEGATION        [ reduce using rule 4 (block_contents -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 4 (block_contents -> .) ]
  ! TRUE            [ reduce using rule 4 (block_contents -> .) ]
  ! FALSE           [ reduce using rule 4 (block_contents -> .) ]
  ! INTEGER         [ reduce using rule 4 (block_contents -> .) ]
  ! REAL            [ reduce using rule 4 (block_contents -> .) ]
  ! STRING          [ reduce using rule 4 (block_contents -> .) ]
  ! HASHTAG         [ reduce using rule 4 (block_contents -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 4 (block_contents -> .) ]

    stat                           shift and go to state 36
    block_contents                 shift and go to state 67
    prop                           shift and go to state 37
    prop_BS                        shift and go to state 16

state 37

    (7) stat -> prop . LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    shift and go to state 18
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34


state 38

    (6) stat -> VARIABLE EQUALS . prop SEMICOLON
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 68
    prop_BS                        shift and go to state 16

state 39

    (34) prop_BS -> LEFT_BRACKET prop_contents . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 69


state 40

    (35) prop_BS -> LEFT_BRACKET RIGHT_BRACKET .

    LEFT_BRACKET    reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    PLUS            reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    MINUS           reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    TIMES           reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    DIVIDE          reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    INT_DIVIDE      reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    MOD             reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    IN              reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    LESS_THAN_EQUAL_TO reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    EQUAL_TO        reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    NOT_EQUAL_TO    reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    GREATER_THAN_EQUAL_TO reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    CONS            reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    CONJUNCTION     reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    DISJUNCTION     reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    $end            reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    COMMA           reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    NEGATION        reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    VARIABLE        reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    TRUE            reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    FALSE           reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    INTEGER         reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    REAL            reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    STRING          reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    HASHTAG         reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    LEFT_CURLY_BRACE reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    PRINT           reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)
    RIGHT_CURLY_BRACE reduce using rule 35 (prop_BS -> LEFT_BRACKET RIGHT_BRACKET .)


state 41

    (36) prop_contents -> prop .
    (37) prop_contents -> prop . COMMA prop_contents
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    RIGHT_BRACKET   reduce using rule 36 (prop_contents -> prop .)
    COMMA           shift and go to state 70
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34


state 42

    (28) prop -> VARIABLE .

    COMMA           reduce using rule 28 (prop -> VARIABLE .)
    PLUS            reduce using rule 28 (prop -> VARIABLE .)
    MINUS           reduce using rule 28 (prop -> VARIABLE .)
    TIMES           reduce using rule 28 (prop -> VARIABLE .)
    DIVIDE          reduce using rule 28 (prop -> VARIABLE .)
    INT_DIVIDE      reduce using rule 28 (prop -> VARIABLE .)
    MOD             reduce using rule 28 (prop -> VARIABLE .)
    IN              reduce using rule 28 (prop -> VARIABLE .)
    LESS_THAN       reduce using rule 28 (prop -> VARIABLE .)
    LESS_THAN_EQUAL_TO reduce using rule 28 (prop -> VARIABLE .)
    EQUAL_TO        reduce using rule 28 (prop -> VARIABLE .)
    NOT_EQUAL_TO    reduce using rule 28 (prop -> VARIABLE .)
    GREATER_THAN_EQUAL_TO reduce using rule 28 (prop -> VARIABLE .)
    GREATER_THAN    reduce using rule 28 (prop -> VARIABLE .)
    CONS            reduce using rule 28 (prop -> VARIABLE .)
    CONJUNCTION     reduce using rule 28 (prop -> VARIABLE .)
    DISJUNCTION     reduce using rule 28 (prop -> VARIABLE .)
    RIGHT_BRACKET   reduce using rule 28 (prop -> VARIABLE .)
    RIGHT_PARENTHESIS reduce using rule 28 (prop -> VARIABLE .)
    LEFT_BRACKET    reduce using rule 28 (prop -> VARIABLE .)
    $end            reduce using rule 28 (prop -> VARIABLE .)
    NEGATION        reduce using rule 28 (prop -> VARIABLE .)
    LEFT_PARENTHESIS reduce using rule 28 (prop -> VARIABLE .)
    VARIABLE        reduce using rule 28 (prop -> VARIABLE .)
    TRUE            reduce using rule 28 (prop -> VARIABLE .)
    FALSE           reduce using rule 28 (prop -> VARIABLE .)
    INTEGER         reduce using rule 28 (prop -> VARIABLE .)
    REAL            reduce using rule 28 (prop -> VARIABLE .)
    STRING          reduce using rule 28 (prop -> VARIABLE .)
    HASHTAG         reduce using rule 28 (prop -> VARIABLE .)
    SEMICOLON       reduce using rule 28 (prop -> VARIABLE .)
    LEFT_CURLY_BRACE reduce using rule 28 (prop -> VARIABLE .)
    PRINT           reduce using rule 28 (prop -> VARIABLE .)
    RIGHT_CURLY_BRACE reduce using rule 28 (prop -> VARIABLE .)


state 43

    (8) stat -> PRINT LEFT_PARENTHESIS . prop RIGHT_PARENTHESIS SEMICOLON
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 71
    prop_BS                        shift and go to state 16

state 44

    (27) prop -> LEFT_PARENTHESIS prop . RIGHT_PARENTHESIS
    (40) prop -> LEFT_PARENTHESIS prop . COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> LEFT_PARENTHESIS prop . COMMA RIGHT_PARENTHESIS
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    RIGHT_PARENTHESIS shift and go to state 72
    COMMA           shift and go to state 73
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34


state 45

    (16) prop -> MINUS INTEGER .

    LEFT_BRACKET    reduce using rule 16 (prop -> MINUS INTEGER .)
    PLUS            reduce using rule 16 (prop -> MINUS INTEGER .)
    MINUS           reduce using rule 16 (prop -> MINUS INTEGER .)
    TIMES           reduce using rule 16 (prop -> MINUS INTEGER .)
    DIVIDE          reduce using rule 16 (prop -> MINUS INTEGER .)
    INT_DIVIDE      reduce using rule 16 (prop -> MINUS INTEGER .)
    MOD             reduce using rule 16 (prop -> MINUS INTEGER .)
    IN              reduce using rule 16 (prop -> MINUS INTEGER .)
    LESS_THAN       reduce using rule 16 (prop -> MINUS INTEGER .)
    LESS_THAN_EQUAL_TO reduce using rule 16 (prop -> MINUS INTEGER .)
    EQUAL_TO        reduce using rule 16 (prop -> MINUS INTEGER .)
    NOT_EQUAL_TO    reduce using rule 16 (prop -> MINUS INTEGER .)
    GREATER_THAN_EQUAL_TO reduce using rule 16 (prop -> MINUS INTEGER .)
    GREATER_THAN    reduce using rule 16 (prop -> MINUS INTEGER .)
    CONS            reduce using rule 16 (prop -> MINUS INTEGER .)
    CONJUNCTION     reduce using rule 16 (prop -> MINUS INTEGER .)
    DISJUNCTION     reduce using rule 16 (prop -> MINUS INTEGER .)
    $end            reduce using rule 16 (prop -> MINUS INTEGER .)
    COMMA           reduce using rule 16 (prop -> MINUS INTEGER .)
    RIGHT_BRACKET   reduce using rule 16 (prop -> MINUS INTEGER .)
    RIGHT_PARENTHESIS reduce using rule 16 (prop -> MINUS INTEGER .)
    NEGATION        reduce using rule 16 (prop -> MINUS INTEGER .)
    LEFT_PARENTHESIS reduce using rule 16 (prop -> MINUS INTEGER .)
    VARIABLE        reduce using rule 16 (prop -> MINUS INTEGER .)
    TRUE            reduce using rule 16 (prop -> MINUS INTEGER .)
    FALSE           reduce using rule 16 (prop -> MINUS INTEGER .)
    INTEGER         reduce using rule 16 (prop -> MINUS INTEGER .)
    REAL            reduce using rule 16 (prop -> MINUS INTEGER .)
    STRING          reduce using rule 16 (prop -> MINUS INTEGER .)
    HASHTAG         reduce using rule 16 (prop -> MINUS INTEGER .)
    SEMICOLON       reduce using rule 16 (prop -> MINUS INTEGER .)
    LEFT_CURLY_BRACE reduce using rule 16 (prop -> MINUS INTEGER .)
    PRINT           reduce using rule 16 (prop -> MINUS INTEGER .)
    RIGHT_CURLY_BRACE reduce using rule 16 (prop -> MINUS INTEGER .)


state 46

    (24) prop -> NEGATION prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 24 (prop -> NEGATION prop .)
    CONJUNCTION     reduce using rule 24 (prop -> NEGATION prop .)
    DISJUNCTION     reduce using rule 24 (prop -> NEGATION prop .)
    $end            reduce using rule 24 (prop -> NEGATION prop .)
    COMMA           reduce using rule 24 (prop -> NEGATION prop .)
    RIGHT_BRACKET   reduce using rule 24 (prop -> NEGATION prop .)
    RIGHT_PARENTHESIS reduce using rule 24 (prop -> NEGATION prop .)
    NEGATION        reduce using rule 24 (prop -> NEGATION prop .)
    LEFT_PARENTHESIS reduce using rule 24 (prop -> NEGATION prop .)
    VARIABLE        reduce using rule 24 (prop -> NEGATION prop .)
    TRUE            reduce using rule 24 (prop -> NEGATION prop .)
    FALSE           reduce using rule 24 (prop -> NEGATION prop .)
    INTEGER         reduce using rule 24 (prop -> NEGATION prop .)
    REAL            reduce using rule 24 (prop -> NEGATION prop .)
    STRING          reduce using rule 24 (prop -> NEGATION prop .)
    HASHTAG         reduce using rule 24 (prop -> NEGATION prop .)
    SEMICOLON       reduce using rule 24 (prop -> NEGATION prop .)
    LEFT_CURLY_BRACE reduce using rule 24 (prop -> NEGATION prop .)
    PRINT           reduce using rule 24 (prop -> NEGATION prop .)
    RIGHT_CURLY_BRACE reduce using rule 24 (prop -> NEGATION prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32

  ! PLUS            [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! MINUS           [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! TIMES           [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! DIVIDE          [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! INT_DIVIDE      [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! MOD             [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! IN              [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! LESS_THAN       [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! LESS_THAN_EQUAL_TO [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! EQUAL_TO        [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! NOT_EQUAL_TO    [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! GREATER_THAN_EQUAL_TO [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! GREATER_THAN    [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! CONS            [ reduce using rule 24 (prop -> NEGATION prop .) ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 47

    (38) prop -> prop_BS LEFT_BRACKET . prop RIGHT_BRACKET
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop_BS                        shift and go to state 16
    prop                           shift and go to state 74

state 48

    (44) prop -> HASHTAG prop . prop
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    PLUS            shift and go to state 19
    MINUS           shift and go to state 76
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 75
    prop_BS                        shift and go to state 16

state 49

    (7) stat -> prop LEFT_BRACKET prop . RIGHT_BRACKET EQUALS prop
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    RIGHT_BRACKET   shift and go to state 77
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34


state 50

    (9) prop -> prop PLUS prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 9 (prop -> prop PLUS prop .)
    PLUS            reduce using rule 9 (prop -> prop PLUS prop .)
    MINUS           reduce using rule 9 (prop -> prop PLUS prop .)
    IN              reduce using rule 9 (prop -> prop PLUS prop .)
    LESS_THAN       reduce using rule 9 (prop -> prop PLUS prop .)
    LESS_THAN_EQUAL_TO reduce using rule 9 (prop -> prop PLUS prop .)
    EQUAL_TO        reduce using rule 9 (prop -> prop PLUS prop .)
    NOT_EQUAL_TO    reduce using rule 9 (prop -> prop PLUS prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 9 (prop -> prop PLUS prop .)
    GREATER_THAN    reduce using rule 9 (prop -> prop PLUS prop .)
    CONS            reduce using rule 9 (prop -> prop PLUS prop .)
    CONJUNCTION     reduce using rule 9 (prop -> prop PLUS prop .)
    DISJUNCTION     reduce using rule 9 (prop -> prop PLUS prop .)
    $end            reduce using rule 9 (prop -> prop PLUS prop .)
    COMMA           reduce using rule 9 (prop -> prop PLUS prop .)
    RIGHT_BRACKET   reduce using rule 9 (prop -> prop PLUS prop .)
    RIGHT_PARENTHESIS reduce using rule 9 (prop -> prop PLUS prop .)
    NEGATION        reduce using rule 9 (prop -> prop PLUS prop .)
    LEFT_PARENTHESIS reduce using rule 9 (prop -> prop PLUS prop .)
    VARIABLE        reduce using rule 9 (prop -> prop PLUS prop .)
    TRUE            reduce using rule 9 (prop -> prop PLUS prop .)
    FALSE           reduce using rule 9 (prop -> prop PLUS prop .)
    INTEGER         reduce using rule 9 (prop -> prop PLUS prop .)
    REAL            reduce using rule 9 (prop -> prop PLUS prop .)
    STRING          reduce using rule 9 (prop -> prop PLUS prop .)
    HASHTAG         reduce using rule 9 (prop -> prop PLUS prop .)
    SEMICOLON       reduce using rule 9 (prop -> prop PLUS prop .)
    LEFT_CURLY_BRACE reduce using rule 9 (prop -> prop PLUS prop .)
    PRINT           reduce using rule 9 (prop -> prop PLUS prop .)
    RIGHT_CURLY_BRACE reduce using rule 9 (prop -> prop PLUS prop .)
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24

  ! TIMES           [ reduce using rule 9 (prop -> prop PLUS prop .) ]
  ! DIVIDE          [ reduce using rule 9 (prop -> prop PLUS prop .) ]
  ! INT_DIVIDE      [ reduce using rule 9 (prop -> prop PLUS prop .) ]
  ! MOD             [ reduce using rule 9 (prop -> prop PLUS prop .) ]
  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! IN              [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONS            [ shift and go to state 32 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 51

    (10) prop -> prop MINUS prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 10 (prop -> prop MINUS prop .)
    PLUS            reduce using rule 10 (prop -> prop MINUS prop .)
    MINUS           reduce using rule 10 (prop -> prop MINUS prop .)
    IN              reduce using rule 10 (prop -> prop MINUS prop .)
    LESS_THAN       reduce using rule 10 (prop -> prop MINUS prop .)
    LESS_THAN_EQUAL_TO reduce using rule 10 (prop -> prop MINUS prop .)
    EQUAL_TO        reduce using rule 10 (prop -> prop MINUS prop .)
    NOT_EQUAL_TO    reduce using rule 10 (prop -> prop MINUS prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 10 (prop -> prop MINUS prop .)
    GREATER_THAN    reduce using rule 10 (prop -> prop MINUS prop .)
    CONS            reduce using rule 10 (prop -> prop MINUS prop .)
    CONJUNCTION     reduce using rule 10 (prop -> prop MINUS prop .)
    DISJUNCTION     reduce using rule 10 (prop -> prop MINUS prop .)
    $end            reduce using rule 10 (prop -> prop MINUS prop .)
    COMMA           reduce using rule 10 (prop -> prop MINUS prop .)
    RIGHT_BRACKET   reduce using rule 10 (prop -> prop MINUS prop .)
    RIGHT_PARENTHESIS reduce using rule 10 (prop -> prop MINUS prop .)
    NEGATION        reduce using rule 10 (prop -> prop MINUS prop .)
    LEFT_PARENTHESIS reduce using rule 10 (prop -> prop MINUS prop .)
    VARIABLE        reduce using rule 10 (prop -> prop MINUS prop .)
    TRUE            reduce using rule 10 (prop -> prop MINUS prop .)
    FALSE           reduce using rule 10 (prop -> prop MINUS prop .)
    INTEGER         reduce using rule 10 (prop -> prop MINUS prop .)
    REAL            reduce using rule 10 (prop -> prop MINUS prop .)
    STRING          reduce using rule 10 (prop -> prop MINUS prop .)
    HASHTAG         reduce using rule 10 (prop -> prop MINUS prop .)
    SEMICOLON       reduce using rule 10 (prop -> prop MINUS prop .)
    LEFT_CURLY_BRACE reduce using rule 10 (prop -> prop MINUS prop .)
    PRINT           reduce using rule 10 (prop -> prop MINUS prop .)
    RIGHT_CURLY_BRACE reduce using rule 10 (prop -> prop MINUS prop .)
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24

  ! TIMES           [ reduce using rule 10 (prop -> prop MINUS prop .) ]
  ! DIVIDE          [ reduce using rule 10 (prop -> prop MINUS prop .) ]
  ! INT_DIVIDE      [ reduce using rule 10 (prop -> prop MINUS prop .) ]
  ! MOD             [ reduce using rule 10 (prop -> prop MINUS prop .) ]
  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! IN              [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONS            [ shift and go to state 32 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 52

    (11) prop -> prop TIMES prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 11 (prop -> prop TIMES prop .)
    PLUS            reduce using rule 11 (prop -> prop TIMES prop .)
    MINUS           reduce using rule 11 (prop -> prop TIMES prop .)
    TIMES           reduce using rule 11 (prop -> prop TIMES prop .)
    DIVIDE          reduce using rule 11 (prop -> prop TIMES prop .)
    INT_DIVIDE      reduce using rule 11 (prop -> prop TIMES prop .)
    MOD             reduce using rule 11 (prop -> prop TIMES prop .)
    IN              reduce using rule 11 (prop -> prop TIMES prop .)
    LESS_THAN       reduce using rule 11 (prop -> prop TIMES prop .)
    LESS_THAN_EQUAL_TO reduce using rule 11 (prop -> prop TIMES prop .)
    EQUAL_TO        reduce using rule 11 (prop -> prop TIMES prop .)
    NOT_EQUAL_TO    reduce using rule 11 (prop -> prop TIMES prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 11 (prop -> prop TIMES prop .)
    GREATER_THAN    reduce using rule 11 (prop -> prop TIMES prop .)
    CONS            reduce using rule 11 (prop -> prop TIMES prop .)
    CONJUNCTION     reduce using rule 11 (prop -> prop TIMES prop .)
    DISJUNCTION     reduce using rule 11 (prop -> prop TIMES prop .)
    $end            reduce using rule 11 (prop -> prop TIMES prop .)
    COMMA           reduce using rule 11 (prop -> prop TIMES prop .)
    RIGHT_BRACKET   reduce using rule 11 (prop -> prop TIMES prop .)
    RIGHT_PARENTHESIS reduce using rule 11 (prop -> prop TIMES prop .)
    NEGATION        reduce using rule 11 (prop -> prop TIMES prop .)
    LEFT_PARENTHESIS reduce using rule 11 (prop -> prop TIMES prop .)
    VARIABLE        reduce using rule 11 (prop -> prop TIMES prop .)
    TRUE            reduce using rule 11 (prop -> prop TIMES prop .)
    FALSE           reduce using rule 11 (prop -> prop TIMES prop .)
    INTEGER         reduce using rule 11 (prop -> prop TIMES prop .)
    REAL            reduce using rule 11 (prop -> prop TIMES prop .)
    STRING          reduce using rule 11 (prop -> prop TIMES prop .)
    HASHTAG         reduce using rule 11 (prop -> prop TIMES prop .)
    SEMICOLON       reduce using rule 11 (prop -> prop TIMES prop .)
    LEFT_CURLY_BRACE reduce using rule 11 (prop -> prop TIMES prop .)
    PRINT           reduce using rule 11 (prop -> prop TIMES prop .)
    RIGHT_CURLY_BRACE reduce using rule 11 (prop -> prop TIMES prop .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! INT_DIVIDE      [ shift and go to state 23 ]
  ! MOD             [ shift and go to state 24 ]
  ! IN              [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONS            [ shift and go to state 32 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 53

    (12) prop -> prop DIVIDE prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 12 (prop -> prop DIVIDE prop .)
    PLUS            reduce using rule 12 (prop -> prop DIVIDE prop .)
    MINUS           reduce using rule 12 (prop -> prop DIVIDE prop .)
    TIMES           reduce using rule 12 (prop -> prop DIVIDE prop .)
    DIVIDE          reduce using rule 12 (prop -> prop DIVIDE prop .)
    INT_DIVIDE      reduce using rule 12 (prop -> prop DIVIDE prop .)
    MOD             reduce using rule 12 (prop -> prop DIVIDE prop .)
    IN              reduce using rule 12 (prop -> prop DIVIDE prop .)
    LESS_THAN       reduce using rule 12 (prop -> prop DIVIDE prop .)
    LESS_THAN_EQUAL_TO reduce using rule 12 (prop -> prop DIVIDE prop .)
    EQUAL_TO        reduce using rule 12 (prop -> prop DIVIDE prop .)
    NOT_EQUAL_TO    reduce using rule 12 (prop -> prop DIVIDE prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 12 (prop -> prop DIVIDE prop .)
    GREATER_THAN    reduce using rule 12 (prop -> prop DIVIDE prop .)
    CONS            reduce using rule 12 (prop -> prop DIVIDE prop .)
    CONJUNCTION     reduce using rule 12 (prop -> prop DIVIDE prop .)
    DISJUNCTION     reduce using rule 12 (prop -> prop DIVIDE prop .)
    $end            reduce using rule 12 (prop -> prop DIVIDE prop .)
    COMMA           reduce using rule 12 (prop -> prop DIVIDE prop .)
    RIGHT_BRACKET   reduce using rule 12 (prop -> prop DIVIDE prop .)
    RIGHT_PARENTHESIS reduce using rule 12 (prop -> prop DIVIDE prop .)
    NEGATION        reduce using rule 12 (prop -> prop DIVIDE prop .)
    LEFT_PARENTHESIS reduce using rule 12 (prop -> prop DIVIDE prop .)
    VARIABLE        reduce using rule 12 (prop -> prop DIVIDE prop .)
    TRUE            reduce using rule 12 (prop -> prop DIVIDE prop .)
    FALSE           reduce using rule 12 (prop -> prop DIVIDE prop .)
    INTEGER         reduce using rule 12 (prop -> prop DIVIDE prop .)
    REAL            reduce using rule 12 (prop -> prop DIVIDE prop .)
    STRING          reduce using rule 12 (prop -> prop DIVIDE prop .)
    HASHTAG         reduce using rule 12 (prop -> prop DIVIDE prop .)
    SEMICOLON       reduce using rule 12 (prop -> prop DIVIDE prop .)
    LEFT_CURLY_BRACE reduce using rule 12 (prop -> prop DIVIDE prop .)
    PRINT           reduce using rule 12 (prop -> prop DIVIDE prop .)
    RIGHT_CURLY_BRACE reduce using rule 12 (prop -> prop DIVIDE prop .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! INT_DIVIDE      [ shift and go to state 23 ]
  ! MOD             [ shift and go to state 24 ]
  ! IN              [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONS            [ shift and go to state 32 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 54

    (13) prop -> prop INT_DIVIDE prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    PLUS            reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    MINUS           reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    TIMES           reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    DIVIDE          reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    INT_DIVIDE      reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    MOD             reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    IN              reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    LESS_THAN       reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    LESS_THAN_EQUAL_TO reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    EQUAL_TO        reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    NOT_EQUAL_TO    reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    GREATER_THAN    reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    CONS            reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    CONJUNCTION     reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    DISJUNCTION     reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    $end            reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    COMMA           reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    RIGHT_BRACKET   reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    RIGHT_PARENTHESIS reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    NEGATION        reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    LEFT_PARENTHESIS reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    VARIABLE        reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    TRUE            reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    FALSE           reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    INTEGER         reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    REAL            reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    STRING          reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    HASHTAG         reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    SEMICOLON       reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    LEFT_CURLY_BRACE reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    PRINT           reduce using rule 13 (prop -> prop INT_DIVIDE prop .)
    RIGHT_CURLY_BRACE reduce using rule 13 (prop -> prop INT_DIVIDE prop .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! INT_DIVIDE      [ shift and go to state 23 ]
  ! MOD             [ shift and go to state 24 ]
  ! IN              [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONS            [ shift and go to state 32 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 55

    (14) prop -> prop MOD prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 14 (prop -> prop MOD prop .)
    PLUS            reduce using rule 14 (prop -> prop MOD prop .)
    MINUS           reduce using rule 14 (prop -> prop MOD prop .)
    TIMES           reduce using rule 14 (prop -> prop MOD prop .)
    DIVIDE          reduce using rule 14 (prop -> prop MOD prop .)
    INT_DIVIDE      reduce using rule 14 (prop -> prop MOD prop .)
    MOD             reduce using rule 14 (prop -> prop MOD prop .)
    IN              reduce using rule 14 (prop -> prop MOD prop .)
    LESS_THAN       reduce using rule 14 (prop -> prop MOD prop .)
    LESS_THAN_EQUAL_TO reduce using rule 14 (prop -> prop MOD prop .)
    EQUAL_TO        reduce using rule 14 (prop -> prop MOD prop .)
    NOT_EQUAL_TO    reduce using rule 14 (prop -> prop MOD prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 14 (prop -> prop MOD prop .)
    GREATER_THAN    reduce using rule 14 (prop -> prop MOD prop .)
    CONS            reduce using rule 14 (prop -> prop MOD prop .)
    CONJUNCTION     reduce using rule 14 (prop -> prop MOD prop .)
    DISJUNCTION     reduce using rule 14 (prop -> prop MOD prop .)
    $end            reduce using rule 14 (prop -> prop MOD prop .)
    COMMA           reduce using rule 14 (prop -> prop MOD prop .)
    RIGHT_BRACKET   reduce using rule 14 (prop -> prop MOD prop .)
    RIGHT_PARENTHESIS reduce using rule 14 (prop -> prop MOD prop .)
    NEGATION        reduce using rule 14 (prop -> prop MOD prop .)
    LEFT_PARENTHESIS reduce using rule 14 (prop -> prop MOD prop .)
    VARIABLE        reduce using rule 14 (prop -> prop MOD prop .)
    TRUE            reduce using rule 14 (prop -> prop MOD prop .)
    FALSE           reduce using rule 14 (prop -> prop MOD prop .)
    INTEGER         reduce using rule 14 (prop -> prop MOD prop .)
    REAL            reduce using rule 14 (prop -> prop MOD prop .)
    STRING          reduce using rule 14 (prop -> prop MOD prop .)
    HASHTAG         reduce using rule 14 (prop -> prop MOD prop .)
    SEMICOLON       reduce using rule 14 (prop -> prop MOD prop .)
    LEFT_CURLY_BRACE reduce using rule 14 (prop -> prop MOD prop .)
    PRINT           reduce using rule 14 (prop -> prop MOD prop .)
    RIGHT_CURLY_BRACE reduce using rule 14 (prop -> prop MOD prop .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! INT_DIVIDE      [ shift and go to state 23 ]
  ! MOD             [ shift and go to state 24 ]
  ! IN              [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONS            [ shift and go to state 32 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 56

    (15) prop -> prop IN prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 15 (prop -> prop IN prop .)
    IN              reduce using rule 15 (prop -> prop IN prop .)
    LESS_THAN       reduce using rule 15 (prop -> prop IN prop .)
    LESS_THAN_EQUAL_TO reduce using rule 15 (prop -> prop IN prop .)
    EQUAL_TO        reduce using rule 15 (prop -> prop IN prop .)
    NOT_EQUAL_TO    reduce using rule 15 (prop -> prop IN prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 15 (prop -> prop IN prop .)
    GREATER_THAN    reduce using rule 15 (prop -> prop IN prop .)
    CONS            reduce using rule 15 (prop -> prop IN prop .)
    CONJUNCTION     reduce using rule 15 (prop -> prop IN prop .)
    DISJUNCTION     reduce using rule 15 (prop -> prop IN prop .)
    $end            reduce using rule 15 (prop -> prop IN prop .)
    COMMA           reduce using rule 15 (prop -> prop IN prop .)
    RIGHT_BRACKET   reduce using rule 15 (prop -> prop IN prop .)
    RIGHT_PARENTHESIS reduce using rule 15 (prop -> prop IN prop .)
    NEGATION        reduce using rule 15 (prop -> prop IN prop .)
    LEFT_PARENTHESIS reduce using rule 15 (prop -> prop IN prop .)
    VARIABLE        reduce using rule 15 (prop -> prop IN prop .)
    TRUE            reduce using rule 15 (prop -> prop IN prop .)
    FALSE           reduce using rule 15 (prop -> prop IN prop .)
    INTEGER         reduce using rule 15 (prop -> prop IN prop .)
    REAL            reduce using rule 15 (prop -> prop IN prop .)
    STRING          reduce using rule 15 (prop -> prop IN prop .)
    HASHTAG         reduce using rule 15 (prop -> prop IN prop .)
    SEMICOLON       reduce using rule 15 (prop -> prop IN prop .)
    LEFT_CURLY_BRACE reduce using rule 15 (prop -> prop IN prop .)
    PRINT           reduce using rule 15 (prop -> prop IN prop .)
    RIGHT_CURLY_BRACE reduce using rule 15 (prop -> prop IN prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24

  ! PLUS            [ reduce using rule 15 (prop -> prop IN prop .) ]
  ! MINUS           [ reduce using rule 15 (prop -> prop IN prop .) ]
  ! TIMES           [ reduce using rule 15 (prop -> prop IN prop .) ]
  ! DIVIDE          [ reduce using rule 15 (prop -> prop IN prop .) ]
  ! INT_DIVIDE      [ reduce using rule 15 (prop -> prop IN prop .) ]
  ! MOD             [ reduce using rule 15 (prop -> prop IN prop .) ]
  ! IN              [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONS            [ shift and go to state 32 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 57

    (17) prop -> prop LESS_THAN prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 17 (prop -> prop LESS_THAN prop .)
    LESS_THAN       reduce using rule 17 (prop -> prop LESS_THAN prop .)
    LESS_THAN_EQUAL_TO reduce using rule 17 (prop -> prop LESS_THAN prop .)
    EQUAL_TO        reduce using rule 17 (prop -> prop LESS_THAN prop .)
    NOT_EQUAL_TO    reduce using rule 17 (prop -> prop LESS_THAN prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 17 (prop -> prop LESS_THAN prop .)
    GREATER_THAN    reduce using rule 17 (prop -> prop LESS_THAN prop .)
    CONJUNCTION     reduce using rule 17 (prop -> prop LESS_THAN prop .)
    DISJUNCTION     reduce using rule 17 (prop -> prop LESS_THAN prop .)
    $end            reduce using rule 17 (prop -> prop LESS_THAN prop .)
    COMMA           reduce using rule 17 (prop -> prop LESS_THAN prop .)
    RIGHT_BRACKET   reduce using rule 17 (prop -> prop LESS_THAN prop .)
    RIGHT_PARENTHESIS reduce using rule 17 (prop -> prop LESS_THAN prop .)
    NEGATION        reduce using rule 17 (prop -> prop LESS_THAN prop .)
    LEFT_PARENTHESIS reduce using rule 17 (prop -> prop LESS_THAN prop .)
    VARIABLE        reduce using rule 17 (prop -> prop LESS_THAN prop .)
    TRUE            reduce using rule 17 (prop -> prop LESS_THAN prop .)
    FALSE           reduce using rule 17 (prop -> prop LESS_THAN prop .)
    INTEGER         reduce using rule 17 (prop -> prop LESS_THAN prop .)
    REAL            reduce using rule 17 (prop -> prop LESS_THAN prop .)
    STRING          reduce using rule 17 (prop -> prop LESS_THAN prop .)
    HASHTAG         reduce using rule 17 (prop -> prop LESS_THAN prop .)
    SEMICOLON       reduce using rule 17 (prop -> prop LESS_THAN prop .)
    LEFT_CURLY_BRACE reduce using rule 17 (prop -> prop LESS_THAN prop .)
    PRINT           reduce using rule 17 (prop -> prop LESS_THAN prop .)
    RIGHT_CURLY_BRACE reduce using rule 17 (prop -> prop LESS_THAN prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    CONS            shift and go to state 32

  ! PLUS            [ reduce using rule 17 (prop -> prop LESS_THAN prop .) ]
  ! MINUS           [ reduce using rule 17 (prop -> prop LESS_THAN prop .) ]
  ! TIMES           [ reduce using rule 17 (prop -> prop LESS_THAN prop .) ]
  ! DIVIDE          [ reduce using rule 17 (prop -> prop LESS_THAN prop .) ]
  ! INT_DIVIDE      [ reduce using rule 17 (prop -> prop LESS_THAN prop .) ]
  ! MOD             [ reduce using rule 17 (prop -> prop LESS_THAN prop .) ]
  ! IN              [ reduce using rule 17 (prop -> prop LESS_THAN prop .) ]
  ! CONS            [ reduce using rule 17 (prop -> prop LESS_THAN prop .) ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 58

    (18) prop -> prop LESS_THAN_EQUAL_TO prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    LESS_THAN       reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    LESS_THAN_EQUAL_TO reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    EQUAL_TO        reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    NOT_EQUAL_TO    reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    GREATER_THAN    reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    CONJUNCTION     reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    DISJUNCTION     reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    $end            reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    COMMA           reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    RIGHT_BRACKET   reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    RIGHT_PARENTHESIS reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    NEGATION        reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    LEFT_PARENTHESIS reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    VARIABLE        reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    TRUE            reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    FALSE           reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    INTEGER         reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    REAL            reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    STRING          reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    HASHTAG         reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    SEMICOLON       reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    LEFT_CURLY_BRACE reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    PRINT           reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    RIGHT_CURLY_BRACE reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    CONS            shift and go to state 32

  ! PLUS            [ reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! MINUS           [ reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! TIMES           [ reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! DIVIDE          [ reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! INT_DIVIDE      [ reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! MOD             [ reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! IN              [ reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! CONS            [ reduce using rule 18 (prop -> prop LESS_THAN_EQUAL_TO prop .) ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 59

    (19) prop -> prop EQUAL_TO prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    LESS_THAN       reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    LESS_THAN_EQUAL_TO reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    EQUAL_TO        reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    NOT_EQUAL_TO    reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    GREATER_THAN    reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    CONJUNCTION     reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    DISJUNCTION     reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    $end            reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    COMMA           reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    RIGHT_BRACKET   reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    RIGHT_PARENTHESIS reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    NEGATION        reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    LEFT_PARENTHESIS reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    VARIABLE        reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    TRUE            reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    FALSE           reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    INTEGER         reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    REAL            reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    STRING          reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    HASHTAG         reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    SEMICOLON       reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    LEFT_CURLY_BRACE reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    PRINT           reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    RIGHT_CURLY_BRACE reduce using rule 19 (prop -> prop EQUAL_TO prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    CONS            shift and go to state 32

  ! PLUS            [ reduce using rule 19 (prop -> prop EQUAL_TO prop .) ]
  ! MINUS           [ reduce using rule 19 (prop -> prop EQUAL_TO prop .) ]
  ! TIMES           [ reduce using rule 19 (prop -> prop EQUAL_TO prop .) ]
  ! DIVIDE          [ reduce using rule 19 (prop -> prop EQUAL_TO prop .) ]
  ! INT_DIVIDE      [ reduce using rule 19 (prop -> prop EQUAL_TO prop .) ]
  ! MOD             [ reduce using rule 19 (prop -> prop EQUAL_TO prop .) ]
  ! IN              [ reduce using rule 19 (prop -> prop EQUAL_TO prop .) ]
  ! CONS            [ reduce using rule 19 (prop -> prop EQUAL_TO prop .) ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 60

    (20) prop -> prop NOT_EQUAL_TO prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    LESS_THAN       reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    LESS_THAN_EQUAL_TO reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    EQUAL_TO        reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    NOT_EQUAL_TO    reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    GREATER_THAN    reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    CONJUNCTION     reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    DISJUNCTION     reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    $end            reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    COMMA           reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    RIGHT_BRACKET   reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    RIGHT_PARENTHESIS reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    NEGATION        reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    LEFT_PARENTHESIS reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    VARIABLE        reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    TRUE            reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    FALSE           reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    INTEGER         reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    REAL            reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    STRING          reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    HASHTAG         reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    SEMICOLON       reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    LEFT_CURLY_BRACE reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    PRINT           reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    RIGHT_CURLY_BRACE reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    CONS            shift and go to state 32

  ! PLUS            [ reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! MINUS           [ reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! TIMES           [ reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! DIVIDE          [ reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! INT_DIVIDE      [ reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! MOD             [ reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! IN              [ reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! CONS            [ reduce using rule 20 (prop -> prop NOT_EQUAL_TO prop .) ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 61

    (21) prop -> prop GREATER_THAN_EQUAL_TO prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    LESS_THAN       reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    LESS_THAN_EQUAL_TO reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    EQUAL_TO        reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    NOT_EQUAL_TO    reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    GREATER_THAN    reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    CONJUNCTION     reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    DISJUNCTION     reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    $end            reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    COMMA           reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    RIGHT_BRACKET   reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    RIGHT_PARENTHESIS reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    NEGATION        reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    LEFT_PARENTHESIS reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    VARIABLE        reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    TRUE            reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    FALSE           reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    INTEGER         reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    REAL            reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    STRING          reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    HASHTAG         reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    SEMICOLON       reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    LEFT_CURLY_BRACE reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    PRINT           reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    RIGHT_CURLY_BRACE reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    CONS            shift and go to state 32

  ! PLUS            [ reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! MINUS           [ reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! TIMES           [ reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! DIVIDE          [ reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! INT_DIVIDE      [ reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! MOD             [ reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! IN              [ reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! CONS            [ reduce using rule 21 (prop -> prop GREATER_THAN_EQUAL_TO prop .) ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 62

    (22) prop -> prop GREATER_THAN prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    LESS_THAN       reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    LESS_THAN_EQUAL_TO reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    EQUAL_TO        reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    NOT_EQUAL_TO    reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    GREATER_THAN    reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    CONJUNCTION     reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    DISJUNCTION     reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    $end            reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    COMMA           reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    RIGHT_BRACKET   reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    RIGHT_PARENTHESIS reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    NEGATION        reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    LEFT_PARENTHESIS reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    VARIABLE        reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    TRUE            reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    FALSE           reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    INTEGER         reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    REAL            reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    STRING          reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    HASHTAG         reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    SEMICOLON       reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    LEFT_CURLY_BRACE reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    PRINT           reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    RIGHT_CURLY_BRACE reduce using rule 22 (prop -> prop GREATER_THAN prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    CONS            shift and go to state 32

  ! PLUS            [ reduce using rule 22 (prop -> prop GREATER_THAN prop .) ]
  ! MINUS           [ reduce using rule 22 (prop -> prop GREATER_THAN prop .) ]
  ! TIMES           [ reduce using rule 22 (prop -> prop GREATER_THAN prop .) ]
  ! DIVIDE          [ reduce using rule 22 (prop -> prop GREATER_THAN prop .) ]
  ! INT_DIVIDE      [ reduce using rule 22 (prop -> prop GREATER_THAN prop .) ]
  ! MOD             [ reduce using rule 22 (prop -> prop GREATER_THAN prop .) ]
  ! IN              [ reduce using rule 22 (prop -> prop GREATER_THAN prop .) ]
  ! CONS            [ reduce using rule 22 (prop -> prop GREATER_THAN prop .) ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 63

    (23) prop -> prop CONS prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 23 (prop -> prop CONS prop .)
    LESS_THAN       reduce using rule 23 (prop -> prop CONS prop .)
    LESS_THAN_EQUAL_TO reduce using rule 23 (prop -> prop CONS prop .)
    EQUAL_TO        reduce using rule 23 (prop -> prop CONS prop .)
    NOT_EQUAL_TO    reduce using rule 23 (prop -> prop CONS prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 23 (prop -> prop CONS prop .)
    GREATER_THAN    reduce using rule 23 (prop -> prop CONS prop .)
    CONJUNCTION     reduce using rule 23 (prop -> prop CONS prop .)
    DISJUNCTION     reduce using rule 23 (prop -> prop CONS prop .)
    $end            reduce using rule 23 (prop -> prop CONS prop .)
    COMMA           reduce using rule 23 (prop -> prop CONS prop .)
    RIGHT_BRACKET   reduce using rule 23 (prop -> prop CONS prop .)
    RIGHT_PARENTHESIS reduce using rule 23 (prop -> prop CONS prop .)
    NEGATION        reduce using rule 23 (prop -> prop CONS prop .)
    LEFT_PARENTHESIS reduce using rule 23 (prop -> prop CONS prop .)
    VARIABLE        reduce using rule 23 (prop -> prop CONS prop .)
    TRUE            reduce using rule 23 (prop -> prop CONS prop .)
    FALSE           reduce using rule 23 (prop -> prop CONS prop .)
    INTEGER         reduce using rule 23 (prop -> prop CONS prop .)
    REAL            reduce using rule 23 (prop -> prop CONS prop .)
    STRING          reduce using rule 23 (prop -> prop CONS prop .)
    HASHTAG         reduce using rule 23 (prop -> prop CONS prop .)
    SEMICOLON       reduce using rule 23 (prop -> prop CONS prop .)
    LEFT_CURLY_BRACE reduce using rule 23 (prop -> prop CONS prop .)
    PRINT           reduce using rule 23 (prop -> prop CONS prop .)
    RIGHT_CURLY_BRACE reduce using rule 23 (prop -> prop CONS prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    CONS            shift and go to state 32

  ! PLUS            [ reduce using rule 23 (prop -> prop CONS prop .) ]
  ! MINUS           [ reduce using rule 23 (prop -> prop CONS prop .) ]
  ! TIMES           [ reduce using rule 23 (prop -> prop CONS prop .) ]
  ! DIVIDE          [ reduce using rule 23 (prop -> prop CONS prop .) ]
  ! INT_DIVIDE      [ reduce using rule 23 (prop -> prop CONS prop .) ]
  ! MOD             [ reduce using rule 23 (prop -> prop CONS prop .) ]
  ! IN              [ reduce using rule 23 (prop -> prop CONS prop .) ]
  ! CONS            [ reduce using rule 23 (prop -> prop CONS prop .) ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 64

    (25) prop -> prop CONJUNCTION prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    CONJUNCTION     reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    DISJUNCTION     reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    $end            reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    COMMA           reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    RIGHT_BRACKET   reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    RIGHT_PARENTHESIS reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    NEGATION        reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    LEFT_PARENTHESIS reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    VARIABLE        reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    TRUE            reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    FALSE           reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    INTEGER         reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    REAL            reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    STRING          reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    HASHTAG         reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    SEMICOLON       reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    LEFT_CURLY_BRACE reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    PRINT           reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    RIGHT_CURLY_BRACE reduce using rule 25 (prop -> prop CONJUNCTION prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32

  ! PLUS            [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! MINUS           [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! TIMES           [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! DIVIDE          [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! INT_DIVIDE      [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! MOD             [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! IN              [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! LESS_THAN       [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! LESS_THAN_EQUAL_TO [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! EQUAL_TO        [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! NOT_EQUAL_TO    [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! GREATER_THAN_EQUAL_TO [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! GREATER_THAN    [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! CONS            [ reduce using rule 25 (prop -> prop CONJUNCTION prop .) ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 65

    (26) prop -> prop DISJUNCTION prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    DISJUNCTION     reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    $end            reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    COMMA           reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    RIGHT_BRACKET   reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    RIGHT_PARENTHESIS reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    NEGATION        reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    LEFT_PARENTHESIS reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    VARIABLE        reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    TRUE            reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    FALSE           reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    INTEGER         reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    REAL            reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    STRING          reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    HASHTAG         reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    SEMICOLON       reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    LEFT_CURLY_BRACE reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    PRINT           reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    RIGHT_CURLY_BRACE reduce using rule 26 (prop -> prop DISJUNCTION prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33

  ! PLUS            [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! MINUS           [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! TIMES           [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! DIVIDE          [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! INT_DIVIDE      [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! MOD             [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! IN              [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! LESS_THAN       [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! LESS_THAN_EQUAL_TO [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! EQUAL_TO        [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! NOT_EQUAL_TO    [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! GREATER_THAN_EQUAL_TO [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! GREATER_THAN    [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! CONS            [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! CONJUNCTION     [ reduce using rule 26 (prop -> prop DISJUNCTION prop .) ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 66

    (3) stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE . block_contents
    (4) block_contents -> .
    (5) block_contents -> . stat block_contents
    (3) stat -> . LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents
    (6) stat -> . VARIABLE EQUALS prop SEMICOLON
    (7) stat -> . prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop
    (8) stat -> . PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_CURLY_BRACE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    RIGHT_CURLY_BRACE reduce using rule 4 (block_contents -> .)
    $end            reduce using rule 4 (block_contents -> .)
    LEFT_CURLY_BRACE shift and go to state 4
    VARIABLE        shift and go to state 5
    PRINT           shift and go to state 7
    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

  ! LEFT_CURLY_BRACE [ reduce using rule 4 (block_contents -> .) ]
  ! VARIABLE        [ reduce using rule 4 (block_contents -> .) ]
  ! PRINT           [ reduce using rule 4 (block_contents -> .) ]
  ! MINUS           [ reduce using rule 4 (block_contents -> .) ]
  ! NEGATION        [ reduce using rule 4 (block_contents -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 4 (block_contents -> .) ]
  ! TRUE            [ reduce using rule 4 (block_contents -> .) ]
  ! FALSE           [ reduce using rule 4 (block_contents -> .) ]
  ! INTEGER         [ reduce using rule 4 (block_contents -> .) ]
  ! REAL            [ reduce using rule 4 (block_contents -> .) ]
  ! STRING          [ reduce using rule 4 (block_contents -> .) ]
  ! HASHTAG         [ reduce using rule 4 (block_contents -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 4 (block_contents -> .) ]

    block_contents                 shift and go to state 78
    stat                           shift and go to state 36
    prop                           shift and go to state 37
    prop_BS                        shift and go to state 16

state 67

    (5) block_contents -> stat block_contents .

    RIGHT_CURLY_BRACE reduce using rule 5 (block_contents -> stat block_contents .)
    LEFT_CURLY_BRACE reduce using rule 5 (block_contents -> stat block_contents .)
    VARIABLE        reduce using rule 5 (block_contents -> stat block_contents .)
    PRINT           reduce using rule 5 (block_contents -> stat block_contents .)
    MINUS           reduce using rule 5 (block_contents -> stat block_contents .)
    NEGATION        reduce using rule 5 (block_contents -> stat block_contents .)
    LEFT_PARENTHESIS reduce using rule 5 (block_contents -> stat block_contents .)
    TRUE            reduce using rule 5 (block_contents -> stat block_contents .)
    FALSE           reduce using rule 5 (block_contents -> stat block_contents .)
    INTEGER         reduce using rule 5 (block_contents -> stat block_contents .)
    REAL            reduce using rule 5 (block_contents -> stat block_contents .)
    STRING          reduce using rule 5 (block_contents -> stat block_contents .)
    HASHTAG         reduce using rule 5 (block_contents -> stat block_contents .)
    LEFT_BRACKET    reduce using rule 5 (block_contents -> stat block_contents .)
    $end            reduce using rule 5 (block_contents -> stat block_contents .)


state 68

    (6) stat -> VARIABLE EQUALS prop . SEMICOLON
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    SEMICOLON       shift and go to state 79
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34


state 69

    (34) prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .

    LEFT_BRACKET    reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    PLUS            reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    MINUS           reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    TIMES           reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    DIVIDE          reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    INT_DIVIDE      reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    MOD             reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    IN              reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    LESS_THAN_EQUAL_TO reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    EQUAL_TO        reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    NOT_EQUAL_TO    reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    GREATER_THAN_EQUAL_TO reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    CONS            reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    CONJUNCTION     reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    DISJUNCTION     reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    $end            reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    COMMA           reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    NEGATION        reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    VARIABLE        reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    TRUE            reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    FALSE           reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    INTEGER         reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    REAL            reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    STRING          reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    HASHTAG         reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    LEFT_CURLY_BRACE reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    PRINT           reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)
    RIGHT_CURLY_BRACE reduce using rule 34 (prop_BS -> LEFT_BRACKET prop_contents RIGHT_BRACKET .)


state 70

    (37) prop_contents -> prop COMMA . prop_contents
    (36) prop_contents -> . prop
    (37) prop_contents -> . prop COMMA prop_contents
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 41
    prop_contents                  shift and go to state 80
    prop_BS                        shift and go to state 16

state 71

    (8) stat -> PRINT LEFT_PARENTHESIS prop . RIGHT_PARENTHESIS SEMICOLON
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    RIGHT_PARENTHESIS shift and go to state 81
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34


state 72

    (27) prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .

    LEFT_BRACKET    reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    TIMES           reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    DIVIDE          reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    INT_DIVIDE      reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    MOD             reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    IN              reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL_TO reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    EQUAL_TO        reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    NOT_EQUAL_TO    reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL_TO reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    CONS            reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    DISJUNCTION     reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    $end            reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    NEGATION        reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    VARIABLE        reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    TRUE            reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    FALSE           reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    INTEGER         reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    REAL            reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    STRING          reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    HASHTAG         reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    LEFT_CURLY_BRACE reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    PRINT           reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)
    RIGHT_CURLY_BRACE reduce using rule 27 (prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS .)


state 73

    (40) prop -> LEFT_PARENTHESIS prop COMMA . prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> LEFT_PARENTHESIS prop COMMA . RIGHT_PARENTHESIS
    (42) prop_tup_contents -> . prop
    (43) prop_tup_contents -> . prop COMMA prop_tup_contents
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    RIGHT_PARENTHESIS shift and go to state 84
    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 82
    prop_tup_contents              shift and go to state 83
    prop_BS                        shift and go to state 16

state 74

    (38) prop -> prop_BS LEFT_BRACKET prop . RIGHT_BRACKET
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    RIGHT_BRACKET   shift and go to state 85
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34


state 75

    (44) prop -> HASHTAG prop prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    LEFT_BRACKET    reduce using rule 44 (prop -> HASHTAG prop prop .)
    PLUS            reduce using rule 44 (prop -> HASHTAG prop prop .)
    MINUS           reduce using rule 44 (prop -> HASHTAG prop prop .)
    TIMES           reduce using rule 44 (prop -> HASHTAG prop prop .)
    DIVIDE          reduce using rule 44 (prop -> HASHTAG prop prop .)
    INT_DIVIDE      reduce using rule 44 (prop -> HASHTAG prop prop .)
    MOD             reduce using rule 44 (prop -> HASHTAG prop prop .)
    IN              reduce using rule 44 (prop -> HASHTAG prop prop .)
    LESS_THAN       reduce using rule 44 (prop -> HASHTAG prop prop .)
    LESS_THAN_EQUAL_TO reduce using rule 44 (prop -> HASHTAG prop prop .)
    EQUAL_TO        reduce using rule 44 (prop -> HASHTAG prop prop .)
    NOT_EQUAL_TO    reduce using rule 44 (prop -> HASHTAG prop prop .)
    GREATER_THAN_EQUAL_TO reduce using rule 44 (prop -> HASHTAG prop prop .)
    GREATER_THAN    reduce using rule 44 (prop -> HASHTAG prop prop .)
    CONS            reduce using rule 44 (prop -> HASHTAG prop prop .)
    CONJUNCTION     reduce using rule 44 (prop -> HASHTAG prop prop .)
    DISJUNCTION     reduce using rule 44 (prop -> HASHTAG prop prop .)
    $end            reduce using rule 44 (prop -> HASHTAG prop prop .)
    COMMA           reduce using rule 44 (prop -> HASHTAG prop prop .)
    RIGHT_BRACKET   reduce using rule 44 (prop -> HASHTAG prop prop .)
    RIGHT_PARENTHESIS reduce using rule 44 (prop -> HASHTAG prop prop .)
    NEGATION        reduce using rule 44 (prop -> HASHTAG prop prop .)
    LEFT_PARENTHESIS reduce using rule 44 (prop -> HASHTAG prop prop .)
    VARIABLE        reduce using rule 44 (prop -> HASHTAG prop prop .)
    TRUE            reduce using rule 44 (prop -> HASHTAG prop prop .)
    FALSE           reduce using rule 44 (prop -> HASHTAG prop prop .)
    INTEGER         reduce using rule 44 (prop -> HASHTAG prop prop .)
    REAL            reduce using rule 44 (prop -> HASHTAG prop prop .)
    STRING          reduce using rule 44 (prop -> HASHTAG prop prop .)
    HASHTAG         reduce using rule 44 (prop -> HASHTAG prop prop .)
    SEMICOLON       reduce using rule 44 (prop -> HASHTAG prop prop .)
    LEFT_CURLY_BRACE reduce using rule 44 (prop -> HASHTAG prop prop .)
    PRINT           reduce using rule 44 (prop -> HASHTAG prop prop .)
    RIGHT_CURLY_BRACE reduce using rule 44 (prop -> HASHTAG prop prop .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! INT_DIVIDE      [ shift and go to state 23 ]
  ! MOD             [ shift and go to state 24 ]
  ! IN              [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_THAN_EQUAL_TO [ shift and go to state 27 ]
  ! EQUAL_TO        [ shift and go to state 28 ]
  ! NOT_EQUAL_TO    [ shift and go to state 29 ]
  ! GREATER_THAN_EQUAL_TO [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! CONS            [ shift and go to state 32 ]
  ! CONJUNCTION     [ shift and go to state 33 ]
  ! DISJUNCTION     [ shift and go to state 34 ]


state 76

    (10) prop -> prop MINUS . prop
    (16) prop -> MINUS . INTEGER
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    INTEGER         shift and go to state 86
    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 51
    prop_BS                        shift and go to state 16

state 77

    (7) stat -> prop LEFT_BRACKET prop RIGHT_BRACKET . EQUALS prop

    EQUALS          shift and go to state 87


state 78

    (3) stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .

    $end            reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    LEFT_CURLY_BRACE reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    VARIABLE        reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    PRINT           reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    MINUS           reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    NEGATION        reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    LEFT_PARENTHESIS reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    TRUE            reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    FALSE           reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    INTEGER         reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    REAL            reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    STRING          reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    HASHTAG         reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    LEFT_BRACKET    reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)
    RIGHT_CURLY_BRACE reduce using rule 3 (stat -> LEFT_CURLY_BRACE block_contents RIGHT_CURLY_BRACE block_contents .)


state 79

    (6) stat -> VARIABLE EQUALS prop SEMICOLON .

    $end            reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    LEFT_CURLY_BRACE reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    VARIABLE        reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    PRINT           reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    MINUS           reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    NEGATION        reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    TRUE            reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    FALSE           reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    INTEGER         reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    REAL            reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    STRING          reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    HASHTAG         reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    LEFT_BRACKET    reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)
    RIGHT_CURLY_BRACE reduce using rule 6 (stat -> VARIABLE EQUALS prop SEMICOLON .)


state 80

    (37) prop_contents -> prop COMMA prop_contents .

    RIGHT_BRACKET   reduce using rule 37 (prop_contents -> prop COMMA prop_contents .)


state 81

    (8) stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 88


state 82

    (42) prop_tup_contents -> prop .
    (43) prop_tup_contents -> prop . COMMA prop_tup_contents
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

    RIGHT_PARENTHESIS reduce using rule 42 (prop_tup_contents -> prop .)
    COMMA           shift and go to state 89
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34


state 83

    (40) prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 90


state 84

    (41) prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .

    LEFT_BRACKET    reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    TIMES           reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    DIVIDE          reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    INT_DIVIDE      reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    MOD             reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    IN              reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL_TO reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    EQUAL_TO        reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    NOT_EQUAL_TO    reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL_TO reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    CONS            reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    DISJUNCTION     reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    $end            reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    NEGATION        reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    VARIABLE        reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    TRUE            reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    FALSE           reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    INTEGER         reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    REAL            reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    STRING          reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    HASHTAG         reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    LEFT_CURLY_BRACE reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    PRINT           reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)
    RIGHT_CURLY_BRACE reduce using rule 41 (prop -> LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS .)


state 85

    (38) prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .

    LEFT_BRACKET    reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    PLUS            reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    MINUS           reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    TIMES           reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    DIVIDE          reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    INT_DIVIDE      reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    MOD             reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    IN              reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    LESS_THAN_EQUAL_TO reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    EQUAL_TO        reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    NOT_EQUAL_TO    reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    GREATER_THAN_EQUAL_TO reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    CONS            reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    CONJUNCTION     reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    DISJUNCTION     reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    $end            reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    COMMA           reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    NEGATION        reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    VARIABLE        reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    TRUE            reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    FALSE           reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    INTEGER         reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    REAL            reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    STRING          reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    HASHTAG         reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    LEFT_CURLY_BRACE reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    PRINT           reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)
    RIGHT_CURLY_BRACE reduce using rule 38 (prop -> prop_BS LEFT_BRACKET prop RIGHT_BRACKET .)


state 86

    (16) prop -> MINUS INTEGER .
    (31) prop -> INTEGER .

  ! reduce/reduce conflict for PLUS resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for MINUS resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for TIMES resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for INT_DIVIDE resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for MOD resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for IN resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for LESS_THAN_EQUAL_TO resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for EQUAL_TO resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for NOT_EQUAL_TO resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN_EQUAL_TO resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for CONS resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for CONJUNCTION resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for DISJUNCTION resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for $end resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for RIGHT_BRACKET resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for NEGATION resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for TRUE resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for FALSE resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for INTEGER resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for REAL resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for STRING resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for HASHTAG resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for LEFT_CURLY_BRACE resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for PRINT resolved using rule 16 (prop -> MINUS INTEGER .)
  ! reduce/reduce conflict for RIGHT_CURLY_BRACE resolved using rule 16 (prop -> MINUS INTEGER .)
    PLUS            reduce using rule 16 (prop -> MINUS INTEGER .)
    MINUS           reduce using rule 16 (prop -> MINUS INTEGER .)
    TIMES           reduce using rule 16 (prop -> MINUS INTEGER .)
    DIVIDE          reduce using rule 16 (prop -> MINUS INTEGER .)
    INT_DIVIDE      reduce using rule 16 (prop -> MINUS INTEGER .)
    MOD             reduce using rule 16 (prop -> MINUS INTEGER .)
    IN              reduce using rule 16 (prop -> MINUS INTEGER .)
    LESS_THAN       reduce using rule 16 (prop -> MINUS INTEGER .)
    LESS_THAN_EQUAL_TO reduce using rule 16 (prop -> MINUS INTEGER .)
    EQUAL_TO        reduce using rule 16 (prop -> MINUS INTEGER .)
    NOT_EQUAL_TO    reduce using rule 16 (prop -> MINUS INTEGER .)
    GREATER_THAN_EQUAL_TO reduce using rule 16 (prop -> MINUS INTEGER .)
    GREATER_THAN    reduce using rule 16 (prop -> MINUS INTEGER .)
    CONS            reduce using rule 16 (prop -> MINUS INTEGER .)
    CONJUNCTION     reduce using rule 16 (prop -> MINUS INTEGER .)
    DISJUNCTION     reduce using rule 16 (prop -> MINUS INTEGER .)
    LEFT_BRACKET    reduce using rule 16 (prop -> MINUS INTEGER .)
    $end            reduce using rule 16 (prop -> MINUS INTEGER .)
    COMMA           reduce using rule 16 (prop -> MINUS INTEGER .)
    RIGHT_BRACKET   reduce using rule 16 (prop -> MINUS INTEGER .)
    RIGHT_PARENTHESIS reduce using rule 16 (prop -> MINUS INTEGER .)
    NEGATION        reduce using rule 16 (prop -> MINUS INTEGER .)
    LEFT_PARENTHESIS reduce using rule 16 (prop -> MINUS INTEGER .)
    VARIABLE        reduce using rule 16 (prop -> MINUS INTEGER .)
    TRUE            reduce using rule 16 (prop -> MINUS INTEGER .)
    FALSE           reduce using rule 16 (prop -> MINUS INTEGER .)
    INTEGER         reduce using rule 16 (prop -> MINUS INTEGER .)
    REAL            reduce using rule 16 (prop -> MINUS INTEGER .)
    STRING          reduce using rule 16 (prop -> MINUS INTEGER .)
    HASHTAG         reduce using rule 16 (prop -> MINUS INTEGER .)
    SEMICOLON       reduce using rule 16 (prop -> MINUS INTEGER .)
    LEFT_CURLY_BRACE reduce using rule 16 (prop -> MINUS INTEGER .)
    PRINT           reduce using rule 16 (prop -> MINUS INTEGER .)
    RIGHT_CURLY_BRACE reduce using rule 16 (prop -> MINUS INTEGER .)

  ! PLUS            [ reduce using rule 31 (prop -> INTEGER .) ]
  ! MINUS           [ reduce using rule 31 (prop -> INTEGER .) ]
  ! TIMES           [ reduce using rule 31 (prop -> INTEGER .) ]
  ! DIVIDE          [ reduce using rule 31 (prop -> INTEGER .) ]
  ! INT_DIVIDE      [ reduce using rule 31 (prop -> INTEGER .) ]
  ! MOD             [ reduce using rule 31 (prop -> INTEGER .) ]
  ! IN              [ reduce using rule 31 (prop -> INTEGER .) ]
  ! LESS_THAN       [ reduce using rule 31 (prop -> INTEGER .) ]
  ! LESS_THAN_EQUAL_TO [ reduce using rule 31 (prop -> INTEGER .) ]
  ! EQUAL_TO        [ reduce using rule 31 (prop -> INTEGER .) ]
  ! NOT_EQUAL_TO    [ reduce using rule 31 (prop -> INTEGER .) ]
  ! GREATER_THAN_EQUAL_TO [ reduce using rule 31 (prop -> INTEGER .) ]
  ! GREATER_THAN    [ reduce using rule 31 (prop -> INTEGER .) ]
  ! CONS            [ reduce using rule 31 (prop -> INTEGER .) ]
  ! CONJUNCTION     [ reduce using rule 31 (prop -> INTEGER .) ]
  ! DISJUNCTION     [ reduce using rule 31 (prop -> INTEGER .) ]
  ! LEFT_BRACKET    [ reduce using rule 31 (prop -> INTEGER .) ]
  ! $end            [ reduce using rule 31 (prop -> INTEGER .) ]
  ! COMMA           [ reduce using rule 31 (prop -> INTEGER .) ]
  ! RIGHT_BRACKET   [ reduce using rule 31 (prop -> INTEGER .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 31 (prop -> INTEGER .) ]
  ! NEGATION        [ reduce using rule 31 (prop -> INTEGER .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 31 (prop -> INTEGER .) ]
  ! VARIABLE        [ reduce using rule 31 (prop -> INTEGER .) ]
  ! TRUE            [ reduce using rule 31 (prop -> INTEGER .) ]
  ! FALSE           [ reduce using rule 31 (prop -> INTEGER .) ]
  ! INTEGER         [ reduce using rule 31 (prop -> INTEGER .) ]
  ! REAL            [ reduce using rule 31 (prop -> INTEGER .) ]
  ! STRING          [ reduce using rule 31 (prop -> INTEGER .) ]
  ! HASHTAG         [ reduce using rule 31 (prop -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 31 (prop -> INTEGER .) ]
  ! LEFT_CURLY_BRACE [ reduce using rule 31 (prop -> INTEGER .) ]
  ! PRINT           [ reduce using rule 31 (prop -> INTEGER .) ]
  ! RIGHT_CURLY_BRACE [ reduce using rule 31 (prop -> INTEGER .) ]


state 87

    (7) stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS . prop
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 91
    prop_BS                        shift and go to state 16

state 88

    (8) stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .

    $end            reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    LEFT_CURLY_BRACE reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    MINUS           reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    NEGATION        reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    TRUE            reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    FALSE           reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    INTEGER         reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    REAL            reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    STRING          reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    HASHTAG         reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    LEFT_BRACKET    reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_CURLY_BRACE reduce using rule 8 (stat -> PRINT LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON .)


state 89

    (43) prop_tup_contents -> prop COMMA . prop_tup_contents
    (42) prop_tup_contents -> . prop
    (43) prop_tup_contents -> . prop COMMA prop_tup_contents
    (9) prop -> . prop PLUS prop
    (10) prop -> . prop MINUS prop
    (11) prop -> . prop TIMES prop
    (12) prop -> . prop DIVIDE prop
    (13) prop -> . prop INT_DIVIDE prop
    (14) prop -> . prop MOD prop
    (15) prop -> . prop IN prop
    (16) prop -> . MINUS INTEGER
    (17) prop -> . prop LESS_THAN prop
    (18) prop -> . prop LESS_THAN_EQUAL_TO prop
    (19) prop -> . prop EQUAL_TO prop
    (20) prop -> . prop NOT_EQUAL_TO prop
    (21) prop -> . prop GREATER_THAN_EQUAL_TO prop
    (22) prop -> . prop GREATER_THAN prop
    (23) prop -> . prop CONS prop
    (24) prop -> . NEGATION prop
    (25) prop -> . prop CONJUNCTION prop
    (26) prop -> . prop DISJUNCTION prop
    (27) prop -> . LEFT_PARENTHESIS prop RIGHT_PARENTHESIS
    (28) prop -> . VARIABLE
    (29) prop -> . TRUE
    (30) prop -> . FALSE
    (31) prop -> . INTEGER
    (32) prop -> . REAL
    (33) prop -> . STRING
    (38) prop -> . prop_BS LEFT_BRACKET prop RIGHT_BRACKET
    (39) prop -> . prop_BS
    (40) prop -> . LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS
    (41) prop -> . LEFT_PARENTHESIS prop COMMA RIGHT_PARENTHESIS
    (44) prop -> . HASHTAG prop prop
    (34) prop_BS -> . LEFT_BRACKET prop_contents RIGHT_BRACKET
    (35) prop_BS -> . LEFT_BRACKET RIGHT_BRACKET

    MINUS           shift and go to state 9
    NEGATION        shift and go to state 11
    LEFT_PARENTHESIS shift and go to state 8
    VARIABLE        shift and go to state 42
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13
    INTEGER         shift and go to state 10
    REAL            shift and go to state 14
    STRING          shift and go to state 15
    HASHTAG         shift and go to state 17
    LEFT_BRACKET    shift and go to state 6

    prop                           shift and go to state 82
    prop_tup_contents              shift and go to state 92
    prop_BS                        shift and go to state 16

state 90

    (40) prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .

    LEFT_BRACKET    reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    TIMES           reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    DIVIDE          reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    INT_DIVIDE      reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    MOD             reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    IN              reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL_TO reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    EQUAL_TO        reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    NOT_EQUAL_TO    reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL_TO reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    CONS            reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    DISJUNCTION     reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    $end            reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    NEGATION        reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    VARIABLE        reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    TRUE            reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    FALSE           reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    INTEGER         reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    REAL            reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    STRING          reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    HASHTAG         reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    LEFT_CURLY_BRACE reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    PRINT           reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)
    RIGHT_CURLY_BRACE reduce using rule 40 (prop -> LEFT_PARENTHESIS prop COMMA prop_tup_contents RIGHT_PARENTHESIS .)


state 91

    (7) stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .
    (9) prop -> prop . PLUS prop
    (10) prop -> prop . MINUS prop
    (11) prop -> prop . TIMES prop
    (12) prop -> prop . DIVIDE prop
    (13) prop -> prop . INT_DIVIDE prop
    (14) prop -> prop . MOD prop
    (15) prop -> prop . IN prop
    (17) prop -> prop . LESS_THAN prop
    (18) prop -> prop . LESS_THAN_EQUAL_TO prop
    (19) prop -> prop . EQUAL_TO prop
    (20) prop -> prop . NOT_EQUAL_TO prop
    (21) prop -> prop . GREATER_THAN_EQUAL_TO prop
    (22) prop -> prop . GREATER_THAN prop
    (23) prop -> prop . CONS prop
    (25) prop -> prop . CONJUNCTION prop
    (26) prop -> prop . DISJUNCTION prop

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    LEFT_CURLY_BRACE reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    VARIABLE        reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    PRINT           reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    NEGATION        reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    LEFT_PARENTHESIS reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    TRUE            reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    FALSE           reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    INTEGER         reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    REAL            reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    STRING          reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    HASHTAG         reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    LEFT_BRACKET    reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    RIGHT_CURLY_BRACE reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    INT_DIVIDE      shift and go to state 23
    MOD             shift and go to state 24
    IN              shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_THAN_EQUAL_TO shift and go to state 27
    EQUAL_TO        shift and go to state 28
    NOT_EQUAL_TO    shift and go to state 29
    GREATER_THAN_EQUAL_TO shift and go to state 30
    GREATER_THAN    shift and go to state 31
    CONS            shift and go to state 32
    CONJUNCTION     shift and go to state 33
    DISJUNCTION     shift and go to state 34

  ! MINUS           [ reduce using rule 7 (stat -> prop LEFT_BRACKET prop RIGHT_BRACKET EQUALS prop .) ]


state 92

    (43) prop_tup_contents -> prop COMMA prop_tup_contents .

    RIGHT_PARENTHESIS reduce using rule 43 (prop_tup_contents -> prop COMMA prop_tup_contents .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFT_BRACKET in state 16 resolved as shift
WARNING: shift/reduce conflict for LEFT_CURLY_BRACE in state 36 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 36 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 36 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 36 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 36 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 36 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 36 resolved as shift
WARNING: shift/reduce conflict for REAL in state 36 resolved as shift
WARNING: shift/reduce conflict for STRING in state 36 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 36 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 36 resolved as shift
WARNING: shift/reduce conflict for LEFT_CURLY_BRACE in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 66 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 66 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 66 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 66 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 66 resolved as shift
WARNING: shift/reduce conflict for REAL in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 66 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: reduce/reduce conflict in state 86 resolved using rule (prop -> MINUS INTEGER)
WARNING: rejected rule (prop -> INTEGER) in state 86
